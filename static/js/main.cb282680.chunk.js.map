{"version":3,"sources":["router/project/CreateNewProject.js","router/project/CreateNewProjectFriendsCard.js","router/css/Google_icon.png","router/Auth.js","components/Navigation.js","router/Profile/ProfileNavigation.js","router/Profile/ProfileCard.js","router/Profile/ProfileJoinProjectCard.js","router/Profile/ProfileRequestCard.js","router/Profile/Profile.js","router/Setting.js","router/project/Chat.js","router/project/ProjectNavigation.js","router/project/CreateNewChatroom.js","router/project/EditChannelCard.js","router/project/EditMemberCard.js","router/project/EditProjectCard.js","router/project/EditProjectNavigation.js","router/project/EditRequestMessageCard.js","router/project/EditProjectInfo.js","router/project/Project.js","components/css/joinMates-logo.jpeg","components/Router.js","index.js","fbase.js","components/fComponents.js"],"names":["CreateNewProject","userObj","setUserObj","setCreateProjectName","useState","isFlipped","setIsFlipped","isTitleWrapper","setIsTitleWapper","isProfileImgWrapper","setIsProfileImgWrapper","memberList","setMemberList","titleInput","setTitleInput","titleWarn","setTitleWarn","projectImg","setProjectImg","sizeOfTitle","setSizeOfTitle","handleClick","e","a","prev","setTimeout","setProject","preventDefault","description","document","querySelector","value","createProject","projectName","projectImgDataURL","memberIdList","userId","projectInfo","projectList","lastEditedProjectList","projectPath","id","projectId","name","chatroomPath","sendAttendMessageWhenCreateProject","alert","className","flipDirection","onSubmit","required","type","onChange","target","title","String","titleLength","size","titleSize","Buffer","byteLength","getTitleLen","indexOf","placeholder","Fragment","htmlFor","src","alt","accept","file","files","reader","FileReader","onloadend","evt","currentTarget","result","imgURL","readAsDataURL","maxLength","minLength","autoFocus","onClick","CreateNewProjectFriendsCard","friendsSearchValue","setFriendsSearchValue","isSearching","setIsSearching","searchingResult","setSearchingResult","noSearchResultMessage","setNoSearchResultMessage","friendWrapperDone","useRef","handleSubmit","current","lowerValue","toLowerCase","findUserWithEmail","userInfo","profileImg","email","split","overlap","i","Array","from","length","photoURL","userName","map","member","Auth","setEmail","password","setPassword","setUserName","pageState","setPageState","isLoginPage","setLoginPage","useEffect","signupBtnParent","getElementById","parentNode","loginParent","slideUpClassName","classList","add","remove","useSetSlideUpEvent","changePage","authWithEmailAndPassword","newAccount","error","googleAccount","socialAccount","googlelogo","useSlideEvent","navOpen","setNavOpen","didMountRef","toggle","closeBtn","replace","changeBtnShape","Navigation","href","rel","to","pathname","hash","state","fromDashboard","projectObj","setting","seeProjectWithIcon","crossOrigin","ProfileNavigation","setIsUserInfoCard","setIsJoinProjectCard","setIsRequestMessageCard","setCard","profileBtn","joinProjectBtn","requestMessage","ProfileCard","isEditPassword","setIdEditPassword","oldPassword","setOldPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","setProfileImg","onChangePassword","getComfirm","window","confirm","changeProfileImg","updateUserProfileImg","imageURL","editPassword","changePassword","updatePassword","changeUserEmail","updateEmail","changeUserName","updateUserName","event","signOut","deleteAccount","ProfileJoinProjectCard","isEnterProject","setIsEnterProject","setProjectList","setTitle","count","setCount","submitTitle","findProjectWithName","projectListRef","defineNotUserProject","userProjectList","joinProject","oldRequestMessages","requestMessages","moveOn","newRequestMessages","push","addProjectRequestUser","leader","requestDate","Date","now","changeProjectListPage","Boolean","ProfileRequestCard","requestList","setRequestList","change","oldRequestList","newRequestList","requestTime","getDate","d","Number","year","getFullYear","slice","month","getMonth","day","addUserInProject","chatroom","rejectProject","message","Profile","isUserInfoCard","isJoinProjectCard","isRequestMessageCard","Setting","setSeeProjectWithIcon","checked","useSeeProjectWithIcon","getChatTime","num","t","hour","getHours","min","getMinutes","setAmPm","Chat","userInput","setUserInput","chatList","setChatList","onMount","scrollDown","resetChatList","chatSettingObj","isUpdateChatList","limit","times","setScroll","scrollTop","console","bringChatList","offsetHeight","scrollHeight","getChatList","path","setFunc","chat__body","addEventListener","removeEventListener","submitMessage","createChat","chat","addChatImg","chatType","createrObj","createrId","createrProfileImg","createTime","doc","ProjectNavigation","setChatroomPath","setEditProjectInfo","isAddmembers","setIsAddmembers","isAddChannels","setIsAddChannels","newMemberName","setNewMemberName","newChannelName","setNewChannelName","defineLenght","testString","limitScore","check_num","check_eng","check_kor","total","notPermit","test","user","createChatroom","undefined","chatroomId","chatroomObj","leaderId","userObjList","CreateNewChatroom","inputValue","setInputValue","EditChannelCard","list","deleteList","setDeleteList","isDeleteDone","setIsDeleteDone","toggleCSS","toggleTarget","currentIconClass","input","btn","style","pointerEvents","borderBottom","opacity","toggleEdit","childNodes","getMatchIndex","oldName","chanList","setNewChanName","newName","index","newChatList","updateProjectChatList","changeTitle","channel","changedTitle","channelList","isOverlapChannelName","checkDelete","clickTarget","chan","newDeleteList","deleteChannel","channelString","deleteProjectChannel","EditMemberCard","setUserObjList","cardMember","setCardMember","releaseMember","releaseProjectMember","relaseUserName","newUserObjList","memberObj","EditProjectCard","setProjectName","setDescription","changeProjectImg","updateProjectImg","updateProjectName","updateProjectDescription","EditProjectNavigation","setIsEditProjectCard","setIsEditChannelCard","setIsEditMemberCard","setIsEditRequestCard","editProject","editChannel","editMember","editRequest","EditRequestMessageCard","requestUserList","submitMember","addProjectMember","rejectRequestMember","EditProjectInfo","isEditProjectCard","isEditchannelCard","isEditMemberCard","isEditRequestCard","Project","setProjectObj","stopBringProjectObj","editProjectInfo","bringProjectStartInfo","projectPath_ID","getProjectInfo","stopBringProjectObject","AppRouter","init","setInit","isLoggedIn","setIsLoggedIn","setProjectPath","rejectList","setRejectList","hashHistory","setHashHistory","createProjectName","useRedirectCreateProjectPage","didAuthMountRef","didUserObjMountRef","didSetMountRef","searchMatchProject","chatroomName","chatroomRef","uploadUserObj","updateUserObj","set","useCallback","decodeHash","decodeURI","location","isProjectHash","isProject","projectHashRef","hashIndex","projectHash","chatroomHash","projectHashObj","getAndSetUserObj","getUserObject","reject","onAuthStateChanged","exact","class","joinMates_logo","ReactDOM","render","StrictMode","firebase","initializeApp","apiKey","process","authDomain","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","fireStore","firestore","storage","createUserWithEmailAndPassword","data","ifNewbieConstructUserData","createUserObj","signInWithEmailAndPassword","code","provider","GithubAuthProvider","GoogleAuthProvider","signInWithPopup","isNewAccount","defaultProfileImg","displayName","additionalUserInfo","isNewUser","collection","get","leaderObj","requestObj","uid","emailVerified","friends","uploadProjectImg","fileRef","ref","child","putString","response","getDownloadURL","responseURL","uuidv4","lastChatId","currentProjectData","chatroomList","isOverlap","preLastChatId","chatIndex","newChatroomObj","update","newPath","commitTo","getStorageURLOfChatImg","chatObj","createrName","createrEmail","isEdited","isCommit","uploadProfileImg","getUserUnprocessedObj","Promise","resolve","waitForValue","setInterval","currentUser","clearInterval","log","projectIdList","project","all","lastEditedProject","orderBy","limitToLast","onSnapshot","docs","commitToId","commitToObj","getUserComfirm","currentPassword","prompt","credential","EmailAuthProvider","reauthenticateWithCredential","then","delete","catch","newEmail","updateProfile","oldChatList","deleteChatIdList","isDelete","j","exists","bringProjectObj","projectData","userIdList","bringProjectList","leaderRef","newProjectList","bringUserList","userList","oldRequestUserList","noMessage","sendAttendMessageWhenAddMember","memberObjList","oldUserInfo","oldLastEditedProjectList","oldProjectList"],"mappings":"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","file":"static/js/main.cb282680.chunk.js","sourcesContent":["import {\n  createProject,\n  sendAttendMessageWhenCreateProject,\n} from 'components/fComponents';\nimport React, { useState } from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport CreateNewProjectFriendsCard from 'router/project/CreateNewProjectFriendsCard';\n\nconst CreateNewProject = ({ userObj, setUserObj, setCreateProjectName }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isTitleWrapper, setIsTitleWapper] = useState(true);\n  const [isProfileImgWrapper, setIsProfileImgWrapper] = useState(true);\n  const [memberList, setMemberList] = useState([]);\n  const [titleInput, setTitleInput] = useState('');\n  const [titleWarn, setTitleWarn] = useState('');\n  const [projectImg, setProjectImg] = useState('');\n  const [sizeOfTitle, setSizeOfTitle] = useState([0, 0]);\n  const defaultProjectImg =\n    'https://firebasestorage.googleapis.com/v0/b/joinmates-7701.appspot.com/o/defaultProjectImg.jpg?alt=media&token=f93b15f0-bd72-4b93-b031-9a5d4631cae9';\n\n  const getTitleLen = (title) => {\n    //한글은 한글자당 2, 영어는 한글자당 1\n    let size = sizeOfTitle;\n    const titleSize = Buffer.byteLength(title, 'utf8');\n    if (size[0] !== titleSize) {\n      switch (titleSize - size[0]) {\n        case 3:\n          size = [titleSize, size[1] + 2];\n          break;\n        case 1:\n          size = [titleSize, size[1] + 1];\n          break;\n        case -1:\n          size = [titleSize, size[1] - 1];\n          break;\n        case -3:\n          size = [titleSize, size[1] - 2];\n          break;\n        default:\n          alert('한글과 영어만 입력이 가능합니다.');\n          break;\n      }\n    }\n    setSizeOfTitle(size);\n    return size[1];\n  };\n\n  const onChangeTitle = (e) => {\n    const {\n      target: { value },\n    } = e;\n    const title = String(value);\n    const titleLength = getTitleLen(title);\n    if (title.indexOf(' ') + 1) {\n      setTitleWarn('띄워쓰기 없이 입력해주십시오');\n    } else if (titleLength > 14) {\n      setTitleWarn('한글은 7글자, 영어는 14글자까지만 가능합니다');\n    } else {\n      setTitleWarn('');\n    }\n    setTitleInput(value);\n  };\n  const handleClick = async (e) => {\n    if (!titleWarn) {\n      setIsFlipped((prev) => !prev);\n      if (isTitleWrapper) {\n        setTimeout(() => {\n          setIsTitleWapper(false);\n        }, 500);\n      } else {\n        setTimeout(() => {\n          setIsProfileImgWrapper(false);\n        }, 500);\n      }\n    }\n  };\n  const getProjectImg = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = async (evt) => {\n        const imgURL = await evt.currentTarget.result;\n        setProjectImg(imgURL);\n      };\n      reader.readAsDataURL(file);\n      e.target.value = '';\n    }\n  };\n  const setProject = async (e) => {\n    e.preventDefault();\n    const description = document.querySelector('#description-paper').value;\n    if (description) {\n      const projectInfo = await createProject({\n        userObj,\n        projectName: titleInput,\n        projectImgDataURL: projectImg,\n        memberIdList: [userObj.userId],\n        description: description,\n      });\n      const projectList = [...userObj.projectList, projectInfo];\n      const lastEditedProjectList = [\n        ...userObj.lastEditedProjectList,\n        {\n          projectPath: {\n            id: projectInfo.projectId,\n            name: projectInfo.projectName,\n          },\n          chatroomPath: '',\n        },\n      ];\n      await sendAttendMessageWhenCreateProject(\n        userObj,\n        memberList,\n        projectInfo\n      );\n      await setUserObj({\n        ...userObj,\n        projectList,\n        lastEditedProjectList,\n      });\n      await setCreateProjectName({\n        id: projectInfo.projectId,\n        name: projectInfo.projectName,\n      });\n      alert('성공적으로 프로젝트를 생성하였습니다');\n    } else {\n      alert('프로젝트 설명을 적어주세요');\n    }\n  };\n  return (\n    <div className=\"createNewProject-container\">\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n        {isTitleWrapper ? (\n          <form\n            onSubmit={handleClick}\n            className=\"createNewProject-card title-wrapper\"\n          >\n            <input\n              className=\"title-input\"\n              required\n              type=\"text\"\n              onChange={onChangeTitle}\n              value={titleInput}\n              placeholder=\"Enter Project Name\"\n            />\n            {titleWarn ? (\n              <span className=\"title-warn\">{titleWarn}</span>\n            ) : (\n              <React.Fragment>\n                <label\n                  className=\"card-submit__label\"\n                  htmlFor=\"title__submit-btn\"\n                >\n                  <i className=\"bx bx-right-arrow-circle bx-flip-vertical\"></i>\n                </label>\n                <input\n                  className=\"card-submit\"\n                  id=\"title__submit-btn\"\n                  type=\"submit\"\n                  value=\"Click to flip\"\n                />\n              </React.Fragment>\n            )}\n          </form>\n        ) : (\n          <CreateNewProjectFriendsCard\n            userObj={userObj}\n            handleClick={handleClick}\n            memberList={memberList}\n            setMemberList={setMemberList}\n          />\n        )}\n        {isProfileImgWrapper ? (\n          <form\n            onSubmit={handleClick}\n            className=\"createNewProject-card projectImg-wrapper\"\n          >\n            <img\n              src={projectImg ? projectImg : defaultProjectImg}\n              alt=\"Project_img\"\n            />\n            <label htmlFor=\"newProjectImg\">Change Project Image</label>\n            <input\n              type=\"file\"\n              id=\"newProjectImg\"\n              accept=\"image/*\"\n              onChange={getProjectImg}\n              value=\"\"\n            />\n            <input\n              className=\"card-submit\"\n              id=\"projectImg-btn\"\n              type=\"submit\"\n              value=\"Select this image\"\n            />\n          </form>\n        ) : (\n          <div className=\"createNewProject-card description-wrapper\">\n            <div className=\"description-title\">Project Description</div>\n            <div className=\"paper\">\n              <div className=\"paper-content\">\n                <textarea\n                  id=\"description-paper\"\n                  maxLength=\"80\"\n                  minLength=\"10\"\n                  autoFocus\n                  placeholder=\"The maximum number of characters is 80\"\n                ></textarea>\n              </div>\n            </div>\n            <input\n              className=\"description__submit-btn\"\n              type=\"submit\"\n              onClick={setProject}\n              value=\"create project\"\n            />\n          </div>\n        )}\n      </ReactCardFlip>\n    </div>\n  );\n};\n\nexport default CreateNewProject;\n","import { findUserWithEmail } from 'components/fComponents';\nimport React, { useRef, useState } from 'react';\n\nconst CreateNewProjectFriendsCard = ({\n  userObj,\n  handleClick,\n  memberList,\n  setMemberList,\n}) => {\n  const [friendsSearchValue, setFriendsSearchValue] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchingResult, setSearchingResult] = useState(null);\n  const [noSearchResultMessage, setNoSearchResultMessage] = useState('');\n  const friendWrapperDone = useRef(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (friendWrapperDone.current) {\n      handleClick(e);\n    } else {\n      setIsSearching(true);\n      const lowerValue = String(friendsSearchValue).toLowerCase();\n      const userInfo = await findUserWithEmail(lowerValue);\n      if (userInfo) {\n        setSearchingResult(userInfo);\n      } else {\n        setNoSearchResultMessage('No User Found');\n      }\n      setIsSearching(false);\n    }\n  };\n  const onChangeEmail = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setIsSearching(false);\n    setSearchingResult(null);\n    setNoSearchResultMessage('');\n    setFriendsSearchValue(value);\n  };\n  const onClickFriendsWrapper = (e) => {\n    friendWrapperDone.current = true;\n    handleSubmit(e);\n  };\n  const addMembers = () => {\n    if (userObj.userId === searchingResult.userId) {\n      alert('이미 추가된 인원입니다');\n    } else {\n      let overlap = false;\n      for (let i = 0; i < Array.from(memberList).length; i++) {\n        if (memberList[i].userId === searchingResult.userId) {\n          overlap = true;\n          alert('이미 추가된 인원입니다');\n          break;\n        }\n      }\n      if (!overlap) {\n        setMemberList([...memberList, searchingResult]);\n      }\n    }\n  };\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"createNewProject-card friends-wrapper\"\n    >\n      <div className=\"friends-title\">\n        <span>Select members</span>\n        <input\n          type=\"email\"\n          value={friendsSearchValue}\n          onChange={onChangeEmail}\n          placeholder=\"Enter members email\"\n          id=\"friends-title__input-email\"\n        />\n        <label htmlFor=\"friends-title__input-email\">\n          <i className=\"bx bx-search\"></i>\n        </label>\n      </div>\n\n      <div className=\"friends-searchResult\">\n        {isSearching ? (\n          <div className=\"friends-loading\">\n            <span className=\"friends-loading__loader\">\n              <span className=\"friends-loading__loader-inner\"></span>\n            </span>\n            <span className=\"friends-loading__title\">Searching</span>\n          </div>\n        ) : (\n          <React.Fragment>\n            {searchingResult ? (\n              <div className=\"friends-searchResult__userInfo\">\n                <div className=\"friends-searchResult__userInfo-info\">\n                  <img src={searchingResult.profileImg} alt=\"userImg\" />\n                  <div className=\"friends-searchResult__userInfo-info-span\">\n                    <div>{searchingResult.name}</div>\n                    <span>{String(searchingResult.email).split('@')[0]}</span>\n                    <span>@{String(searchingResult.email).split('@')[1]}</span>\n                  </div>\n                </div>\n                <input type=\"button\" onClick={addMembers} value=\"Add Member\" />\n              </div>\n            ) : (\n              <div className=\"noSearchResult\">{noSearchResultMessage}</div>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n      <ul className=\"friends-memberList-wrapper\">\n        <li key={userObj.email} className=\"friends-memberList-memeber\">\n          <img src={userObj.photoURL} alt=\"img\" />\n          <span>{userObj.userName}</span>\n        </li>\n        {memberList.map((member) => {\n          return (\n            <li key={member.email} className=\"friends-memberList-memeber\">\n              <img src={member.profileImg} alt=\"img\" />\n              <span>{member.name}</span>\n            </li>\n          );\n        })}\n      </ul>\n      <input\n        className=\"card-submit\"\n        id=\"friends-wrapper__card-submit\"\n        type=\"button\"\n        onClick={onClickFriendsWrapper}\n        value=\"Continue\"\n      />\n    </form>\n  );\n};\n\nexport default CreateNewProjectFriendsCard;\n","export default __webpack_public_path__ + \"static/media/Google_icon.4d7d0ca3.png\";","import React, { useState, useEffect } from 'react';\nimport googlelogo from 'router/css/Google_icon.png';\nimport {\n  authWithEmailAndPassword,\n  socialAccount,\n} from 'components/fComponents';\n\nfunction useSetSlideUpEvent() {\n  const [pageState, setPageState] = useState('signup');\n  const [isLoginPage, setLoginPage] = useState(true);\n  const changePage = () => {\n    const signupBtn = document.getElementById('signup');\n    const signupBtnParent = signupBtn.parentNode.parentNode;\n    const login = document.getElementById('login');\n    const loginParent = login.parentNode;\n    const slideUpClassName = 'slide-up';\n    if (pageState === 'login') {\n      loginParent.classList.add(slideUpClassName);\n      signupBtnParent.classList.remove(slideUpClassName);\n      setLoginPage(false);\n    } else if (pageState === 'signup') {\n      loginParent.classList.remove(slideUpClassName);\n      signupBtnParent.classList.add(slideUpClassName);\n      setLoginPage(true);\n    }\n  };\n  useEffect(changePage, [pageState]);\n  return { isLoginPage, setPageState };\n}\n\nfunction Auth() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  // const [errorMessage, setErrorMessage] = useState(null);\n  const { isLoginPage, setPageState } = useSetSlideUpEvent();\n  const transitFormSignup = () => {\n    document.getElementById('login').classList.remove('opacity0');\n  };\n  const transitFormLogin = () => {\n    document.getElementById('login').classList.add('opacity0');\n  };\n  const changePage = (e) => {\n    let type = e.target.id;\n    if (type === 'signup') {\n      setPageState('login');\n      transitFormSignup();\n    } else if (type === 'login') {\n      setPageState('signup');\n      transitFormLogin();\n    }\n  };\n  const onChange = (e) => {\n    let { name, value } = e.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    } else if (name === 'userName') {\n      setUserName(value);\n    }\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const { error } = await authWithEmailAndPassword({\n      newAccount: !isLoginPage,\n      email,\n      password,\n      userName,\n    });\n    if (error) alert(error);\n  };\n  const googleAccount = async () => {\n    const { error } = socialAccount('google');\n    if (error) alert(error);\n  };\n  return (\n    <div className=\"form-structor\">\n      <h1 id=\"app-name\">JoinMates</h1>\n      <form onSubmit={onSubmit} className=\"signup\">\n        <h2 onClick={changePage} className=\"form-title opacity0\" id=\"login\">\n          <span>or</span>Log in\n        </h2>\n        <div className=\"form-holder\">\n          <input\n            required\n            name=\"email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"input\"\n            placeholder=\"Email\"\n          />\n          <input\n            required\n            name=\"password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"input\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <input value=\"Log in\" type=\"submit\" className=\"submit-btn\" />\n        <button onClick={googleAccount} className=\"google_account\">\n          <img alt=\"google_icon\" id=\"google_icon\" src={googlelogo} />\n          <span id=\"google_span\">\n            {isLoginPage ? 'Login with Google' : 'Sign up with Google'}\n          </span>\n        </button>\n      </form>\n      <form onSubmit={onSubmit} className=\"login slide-up\">\n        <div className=\"center\">\n          <h2 onClick={changePage} className=\"form-title\" id=\"signup\">\n            <span>or</span>Sign up\n          </h2>\n          <div className=\"form-holder\">\n            <input\n              required\n              name=\"userName\"\n              onChange={onChange}\n              type=\"text\"\n              maxLength=\"15\"\n              className=\"input\"\n              placeholder=\"Name\"\n            />\n            <input\n              required\n              name=\"email\"\n              onChange={onChange}\n              type=\"email\"\n              className=\"input\"\n              placeholder=\"Email\"\n            />\n            <input\n              required\n              name=\"password\"\n              onChange={onChange}\n              type=\"password\"\n              className=\"input\"\n              placeholder=\"Password\"\n            />\n          </div>\n          <input value=\"Sign up\" type=\"submit\" className=\"submit-btn\" />\n          <button onClick={googleAccount} className=\"google_account\">\n            <img alt=\"google_icon\" id=\"google_icon\" src={googlelogo} />\n            <span id=\"google_span\">\n              {isLoginPage ? 'Login with Google' : 'Sign up with Google'}\n            </span>\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Auth;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst useSlideEvent = () => {\n  const [navOpen, setNavOpen] = useState(false);\n  const didMountRef = useRef(false);\n\n  const changeBtnShape = (navOpen) => {\n    let closeBtn = document.querySelector('#header-btn');\n    if (navOpen) {\n      closeBtn.classList.replace('bx-menu', 'bx-menu-alt-right');\n    } else {\n      closeBtn.classList.replace('bx-menu-alt-right', 'bx-menu');\n    }\n  };\n  useEffect(() => {\n    if (didMountRef.current) {\n      document.querySelector('.sideBar').classList.toggle('open');\n      changeBtnShape(navOpen);\n    } else didMountRef.current = true;\n  }, [navOpen]);\n  return { setNavOpen };\n};\n\nconst Navigation = ({ userObj }) => {\n  const { setNavOpen } = useSlideEvent();\n  return (\n    <React.Fragment>\n      <link\n        href=\"https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css\"\n        rel=\"stylesheet\"\n      />\n      <div className=\"sideBar\">\n        <div className=\"header\">\n          <i className=\"bx bx-coffee\"></i>\n          <i\n            onClick={() => setNavOpen((prev) => !prev)}\n            className=\"bx bx-menu\"\n            id=\"header-btn\"\n          ></i>\n          <div className=\"header-name\">JoinMates</div>\n        </div>\n        <ul className=\"projectList\">\n          <li className=\"nav-list\">\n            <Link\n              className=\"a-link\"\n              to={{\n                pathname: '/project',\n                hash: `#new`,\n                state: { fromDashboard: true },\n              }}\n            >\n              <i className=\"bx bx-layer-plus\"></i>\n              <span className=\"links-name\" id=\"create-project-btn\">\n                Create Project\n              </span>\n            </Link>\n          </li>\n          {userObj.projectList.map((projectObj) => (\n            <li key={projectObj.projectId} className=\"nav-list\">\n              <Link\n                className=\"a-link\"\n                id={projectObj.projectId}\n                name={projectObj.projectName}\n                key={projectObj.projectId}\n                to={{\n                  pathname: `/project/${projectObj.projectId}`,\n                  state: { fromDashboard: true },\n                }}\n              >\n                {userObj.setting.seeProjectWithIcon ? (\n                  <i className=\"bx bxs-component\"></i>\n                ) : (\n                  <img\n                    className=\"profile_img\"\n                    src={projectObj.projectImg}\n                    alt=\"img\"\n                  />\n                )}\n                <span className=\"links-name\">{projectObj.projectName}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n        <ul className=\"footer\">\n          <li className=\"nav-list\">\n            <Link className=\"a-link\" to=\"/profile\">\n              <i className=\"bx bx-user\"></i>\n              <span className=\"links-name\">Profile</span>\n            </Link>\n          </li>\n          <li className=\"nav-list\">\n            <Link className=\"a-link\" to=\"/setting\">\n              <i className=\"bx bx-cog\"></i>\n              <span className=\"links-name\">Setting</span>\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <script\n        src=\"https://kit.fontawesome.com/6478f529f2.js\"\n        crossOrigin=\"anonymous\"\n      ></script>\n    </React.Fragment>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\n\nconst ProfileNavigation = ({\n  setIsUserInfoCard,\n  setIsJoinProjectCard,\n  setIsRequestMessageCard,\n}) => {\n  const setCard = (e) => {\n    const {\n      target: { id },\n    } = e;\n    const profileBtn = document.querySelector('#navi-profile');\n    const joinProjectBtn = document.querySelector('#navi-joinProject');\n    const requestMessage = document.querySelector('#navi-requestMessage');\n    profileBtn.classList.remove('focus');\n    joinProjectBtn.classList.remove('focus');\n    requestMessage.classList.remove('focus');\n    if (id === 'navi-profile') {\n      profileBtn.classList.add('focus');\n      setIsRequestMessageCard(false);\n      setIsJoinProjectCard(false);\n      setIsUserInfoCard(true);\n    } else if (id === 'navi-joinProject') {\n      joinProjectBtn.classList.add('focus');\n      setIsRequestMessageCard(false);\n      setIsUserInfoCard(false);\n      setIsJoinProjectCard(true);\n    } else if (id === 'navi-requestMessage') {\n      requestMessage.classList.add('focus');\n      setIsUserInfoCard(false);\n      setIsJoinProjectCard(false);\n      setIsRequestMessageCard(true);\n    }\n  };\n  return (\n    <div className=\"profileNavigation-wrapper\">\n      <div className=\"profile-navi focus\" id=\"navi-profile\" onClick={setCard}>\n        <span>Profile</span>\n      </div>\n      <div className=\"profile-navi\" id=\"navi-joinProject\" onClick={setCard}>\n        <span>Join Project</span>\n      </div>\n      <div className=\"profile-navi\" id=\"navi-requestMessage\" onClick={setCard}>\n        <span>Request Messages</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileNavigation;\n","import React, { useState } from 'react';\nimport {\n  signOut,\n  deleteAccount,\n  updatePassword,\n  updateEmail,\n  updateUserName,\n  updateUserProfileImg,\n} from 'components/fComponents';\n\nconst ProfileCard = ({ userObj, setUserObj }) => {\n  const [userName, setUserName] = useState(userObj.userName);\n  const [email, setEmail] = useState(userObj.email);\n  const [isEditPassword, setIdEditPassword] = useState(false);\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [profileImg, setProfileImg] = useState(userObj.photoURL);\n  const onChange = (e) => {\n    let { id, value } = e.target;\n    if (id === 'email') {\n      setEmail(value);\n    } else if (id === 'userName') {\n      setUserName(value);\n    }\n  };\n  const onChangePassword = (e) => {\n    let { id, value } = e.target;\n    if (id === 'oldPassword') {\n      setOldPassword(value);\n    } else if (id === 'newPassword') {\n      setNewPassword(value);\n    } else if (id === 'confirmNewPassword') {\n      setConfirmNewPassword(value);\n    }\n  };\n  const getComfirm = (name) => {\n    const comfirmRef = window.confirm(\n      `정말로 ${name}하기를 원하십니까?\\n이 과정은 되돌릴 수 없습니다`\n    );\n    if (comfirmRef) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const logOut = (event) => {\n    event.preventDefault();\n    const confirmRef = getComfirm('로그아웃');\n    if (confirmRef) {\n      signOut();\n    }\n  };\n  const deleteUser = (event) => {\n    event.preventDefault();\n    const confirmRef = getComfirm('탈퇴');\n    if (confirmRef) {\n      deleteAccount();\n    }\n  };\n  const changeProfileImg = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = async (evt) => {\n        const imgURL = await evt.currentTarget.result;\n        const imageURL = await updateUserProfileImg(userObj, imgURL);\n        setUserObj({\n          ...userObj,\n          photoURL: imageURL,\n        });\n        setProfileImg(imageURL);\n      };\n      reader.readAsDataURL(file);\n      e.target.value = '';\n    }\n  };\n  const editPassword = () => {\n    setIdEditPassword((prev) => !prev);\n    setOldPassword('');\n    setNewPassword('');\n    setConfirmNewPassword('');\n  };\n  const changePassword = async (e) => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      alert('새로운 비밀번호가 다시확인된 비밀번호와 같지 않습니다');\n    } else {\n      await updatePassword(oldPassword, newPassword);\n      editPassword();\n    }\n  };\n  const changeUserEmail = async () => {\n    await updateEmail(email);\n    setUserObj({\n      ...userObj,\n      email,\n    });\n  };\n  const changeUserName = async () => {\n    await updateUserName(userName);\n    setUserObj({\n      ...userObj,\n      userName,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"editProfile-wrapper\">\n        <div className=\"profileImg-wrapper\">\n          <img src={profileImg} alt=\"Profile_img\" />\n          <label htmlFor=\"uploadImg\">Change Profile Image</label>\n          <input\n            type=\"file\"\n            id=\"uploadImg\"\n            accept=\"image/*\"\n            onChange={changeProfileImg}\n          />\n        </div>\n        <React.Fragment>\n          {isEditPassword ? (\n            <form className=\"changePassword\" onSubmit={changePassword}>\n              <input\n                type=\"button\"\n                onClick={editPassword}\n                value=\"Go Back\"\n                id=\"profile-info__go-back\"\n              />\n              <div className=\"_label\" htmlFor=\"oldPassword\">\n                Current Password\n              </div>\n              <input\n                className=\"_input\"\n                required\n                onChange={onChangePassword}\n                value={oldPassword}\n                type=\"password\"\n                id=\"oldPassword\"\n              />\n              <div className=\"_label\" htmlFor=\"newPassword\">\n                New Password\n              </div>\n              <input\n                className=\"_input\"\n                required\n                onChange={onChangePassword}\n                value={newPassword}\n                type=\"password\"\n                id=\"newPassword\"\n              />\n              <div className=\"_label\" htmlFor=\"confirmNewPassword\">\n                Confirm New Password\n              </div>\n              <input\n                className=\"_input\"\n                required\n                onChange={onChangePassword}\n                value={confirmNewPassword}\n                type=\"password\"\n                id=\"confirmNewPassword\"\n              />\n              <input\n                className=\"_input _btn\"\n                type=\"submit\"\n                id=\"changePasswordBtn\"\n                value=\"Change Password\"\n              />\n            </form>\n          ) : (\n            <form className=\"profile-info\">\n              <input\n                className=\"hidden_input\"\n                value=\"Update\"\n                id=\"userName_btn\"\n                type=\"button\"\n                onClick={changeUserName}\n              />\n              <div className=\"_label\" htmlFor=\"userName\">\n                Name\n              </div>\n              <input\n                className=\"_input\"\n                required\n                type=\"text\"\n                onChange={onChange}\n                id=\"userName\"\n                value={userName}\n              />\n              <div className=\"_label\" htmlFor=\"email\">\n                Email\n              </div>\n              <input\n                className=\"_input\"\n                required\n                type=\"email\"\n                onChange={onChange}\n                id=\"email\"\n                value={email}\n              />\n              <input\n                className=\"hidden_input\"\n                value=\"Update\"\n                id=\"email_btn\"\n                type=\"button\"\n                onClick={changeUserEmail}\n              />\n              <div className=\"_label\" htmlFor=\"password\">\n                Password\n              </div>\n              <input\n                className=\"_input _btn\"\n                required\n                type=\"button\"\n                onClick={editPassword}\n                value=\"Change Password\"\n              />\n            </form>\n          )}\n        </React.Fragment>\n      </div>\n      <div className=\"logOut-wrapper\">\n        <input type=\"button\" onClick={logOut} value=\"Log Out\" />\n        <input type=\"button\" onClick={deleteUser} value=\"Delete Account\" />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ProfileCard;\n","import {\n  addProjectRequestUser,\n  findProjectWithName,\n} from 'components/fComponents';\nimport React, { useState } from 'react';\n\nconst ProfileJoinProjectCard = ({ userObj, setUserObj }) => {\n  const [isEnterProject, setIsEnterProject] = useState(true);\n  const [isSearching, setIsSearching] = useState(true);\n  const [projectList, setProjectList] = useState(null);\n  const [title, setTitle] = useState('');\n  const [titleWarn, setTitleWarn] = useState('');\n  const [count, setCount] = useState(0);\n\n  const goBack = () => {\n    setProjectList(null);\n    setTitle('');\n    setTitleWarn('');\n    setCount(0);\n    setIsEnterProject(true);\n    setIsSearching(true);\n  };\n  const onChangeTitle = (e) => {\n    const {\n      target: { value },\n    } = e;\n    const title = String(value);\n    if (title.indexOf(' ') + 1) {\n      setTitleWarn('띄워쓰기 없이 입력해주십시오');\n    } else {\n      setTitleWarn('');\n    }\n    setTitle(value);\n  };\n  const submitTitle = async (e) => {\n    e.preventDefault();\n    if (!titleWarn) {\n      const wrapper = document.querySelector('.enterJoinProject-wrapper');\n      wrapper.classList.add('joinProject__fade-out');\n      setTimeout(() => {\n        setIsEnterProject(false);\n      }, 350);\n      const projectListRef = await findProjectWithName(title);\n      if (projectListRef) {\n        setProjectList(projectListRef);\n      }\n      setIsSearching(false);\n    }\n  };\n  const defineNotUserProject = () => {\n    const userProjectList = Array.from(userObj.projectList);\n    for (let i = 0; i < userProjectList.length; i++) {\n      if (projectList[count].id === userProjectList[i].projectId) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const joinProject = async () => {\n    const projectId = projectList[count].id;\n    if (defineNotUserProject()) {\n      const oldRequestMessages = Array.from(userObj.requestMessages);\n      let moveOn = true;\n      let newRequestMessages = [];\n      for (let i = 0; i < oldRequestMessages.length; i++) {\n        if (projectId === oldRequestMessages[i].projectId) {\n          if (oldRequestMessages[i].state === 'reject') {\n            const confirm = window.confirm(\n              '거절된 프로젝트입니다\\n재신청 하시겠습니까?'\n            );\n            if (confirm) {\n              moveOn = true;\n            } else {\n              moveOn = false;\n            }\n          } else {\n            moveOn = false;\n          }\n        } else {\n          newRequestMessages.push(oldRequestMessages[i]);\n        }\n      }\n      if (moveOn) {\n        await addProjectRequestUser(projectId, userObj);\n        newRequestMessages.push({\n          projectName: projectList[count].name,\n          projectId: projectList[count].id,\n          projectImg: projectList[count].projectImg,\n          leader: projectList[count].leader,\n          requestDate: Date.now(),\n          state: 'pending',\n        });\n        setUserObj({\n          ...userObj,\n          requestMessages: newRequestMessages,\n        });\n        alert('성공적으로 요청 메세지를 전송하였습니다');\n      } else {\n        alert('이미 요청된 프로젝트입니다');\n      }\n    } else {\n      alert('이미 존재하는 프로젝트이거나 요청된 프로젝트입니다');\n    }\n  };\n  const changeProjectListPage = (e) => {\n    const {\n      target: { classList },\n    } = e;\n    if (classList.value === 'joinProject__swift-right') {\n      setCount((prev) => prev + 1);\n    } else if (classList.value === 'joinProject__swift-left') {\n      setCount((prev) => prev - 1);\n    }\n  };\n  return (\n    <div className=\"joinProject-wrapper\">\n      {isEnterProject ? (\n        <form onSubmit={submitTitle} className=\"enterJoinProject-wrapper\">\n          <input\n            type=\"text\"\n            className=\"enterJoinProject__input\"\n            placeholder=\"Enter Project Name\"\n            onChange={onChangeTitle}\n            value={title}\n          />\n          {titleWarn ? (\n            <span className=\"enterJoinProject__title-warn\">{titleWarn}</span>\n          ) : (\n            <React.Fragment>\n              <label\n                className=\"enterJoinProject__label\"\n                htmlFor=\"enterJoinProject__submit-btn\"\n              >\n                <i className=\"bx bx-right-arrow-circle bx-flip-vertical\"></i>\n              </label>\n              <input\n                className=\"enterJoinProject__submit\"\n                id=\"enterJoinProject__submit-btn\"\n                type=\"submit\"\n                value=\"\"\n              />\n            </React.Fragment>\n          )}\n        </form>\n      ) : (\n        <React.Fragment>\n          {isSearching ? (\n            <div className=\"loading-container\">\n              <div className=\"loading\"></div>\n              <div id=\"loading-text\">Searching</div>\n            </div>\n          ) : (\n            <React.Fragment>\n              {projectList ? (\n                <div className=\"joinProject-project-wrapper\">\n                  <div className=\"joinProject-project__img-wrapper\">\n                    <img\n                      src={projectList[count].projectImg}\n                      alt=\"project_img\"\n                    />\n                    <div>{projectList[count].name}</div>\n                  </div>\n                  <div className=\"joinProject-project__info-wrapper\">\n                    <div className=\"info-leader-wrapper\">\n                      <div className=\"info-leader__img-wrapper\">\n                        <img\n                          src={projectList[count].leader.profileImg}\n                          alt=\"img\"\n                        />\n                      </div>\n                      <div className=\"info-leader__info\">\n                        <span className=\"info-leader__info-name\">\n                          {projectList[count].leader.name}\n                        </span>\n                        <span className=\"info-leader__info-email\">\n                          {projectList[count].leader.email}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"info-description\">\n                      <span>Project Description</span>\n                      <div>{projectList[count].description}</div>\n                    </div>\n                    <input\n                      id=\"joinProject-btn\"\n                      type=\"button\"\n                      value=\"Join Project\"\n                      onClick={joinProject}\n                    />\n                  </div>\n                  {Boolean(projectList[count + 1]) && (\n                    <div\n                      onClick={changeProjectListPage}\n                      className=\"joinProject__swift-right\"\n                    >\n                      <div className=\"joinProject__swift-description-right\">\n                        Next\n                      </div>\n                      <div className=\"swift-arrow swift-right\"></div>\n                    </div>\n                  )}\n                  {count > 0 && Boolean(projectList[count - 1]) && (\n                    <div\n                      onClick={changeProjectListPage}\n                      className=\"joinProject__swift-left\"\n                    >\n                      <div className=\"swift-arrow swift-left\"></div>\n                      <div className=\"joinProject__swift-description-left\">\n                        Previous\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"joinProject-noProject-wrapper\">\n                  <span>No Project Found</span>\n                  <input type=\"button\" value=\"Go Back\" onClick={goBack} />\n                </div>\n              )}\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileJoinProjectCard;\n","import { addUserInProject } from 'components/fComponents';\nimport React, { useEffect, useState } from 'react';\n\nconst ProfileRequestCard = ({ userObj, setUserObj }) => {\n  const [requestList, setRequestList] = useState(null);\n  useEffect(() => {\n    let change = false;\n    const oldRequestList = Array.from(userObj.requestMessages);\n    let newRequestList = [];\n    for (let i = 0; i < oldRequestList.length; i++) {\n      if (oldRequestList[i].state === 'reject') {\n        const requestTime = oldRequestList[i].requestDate;\n        const weekTime = 604800000;\n        if (Date.now() - requestTime < weekTime) {\n          newRequestList.push(oldRequestList[i]);\n        } else {\n          change = true;\n        }\n      } else if (oldRequestList[i].state === 'fulfilled') {\n        change = true;\n      } else {\n        newRequestList.push(oldRequestList[i]);\n      }\n    }\n    if (change) {\n      setUserObj({\n        ...userObj,\n        requestMessages: newRequestList,\n      });\n    }\n    if (newRequestList.length) {\n      setRequestList(newRequestList);\n    } else {\n      setRequestList(null);\n    }\n  }, [userObj, setUserObj]);\n  const getDate = (requestDate) => {\n    var d = new Date(Number(requestDate));\n    const year = String(d.getFullYear()).slice(2);\n    let month = String(d.getMonth() + 1);\n    if (month.length === 1) {\n      month = `0${month}`;\n    }\n    let day = String(d.getDate());\n    if (day.length === 1) {\n      day = `0${day}`;\n    }\n    return `${year}:${month}:${day}`;\n  };\n  const joinProject = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    const { chatroom, projectInfo } = await addUserInProject(\n      name,\n      userObj.userId\n    );\n\n    let projectList = Array.from(userObj.projectList);\n    projectList.push(projectInfo);\n    let lastEditedProjectList = Array.from(userObj.lastEditedProjectList);\n    lastEditedProjectList.push({\n      chatroomPath: chatroom,\n      projectPath: {\n        id: projectInfo.projectId,\n        name: projectInfo.projectName,\n      },\n    });\n    const oldRequestList = Array.from(requestList);\n    let requestMessages = [];\n    for (let i = 0; i < oldRequestList.length; i++) {\n      if (oldRequestList[i].projectId !== name) {\n        requestMessages.push(oldRequestList[i]);\n      }\n    }\n    setUserObj({\n      ...userObj,\n      lastEditedProjectList,\n      projectList,\n      requestMessages,\n    });\n    setRequestList(requestMessages);\n  };\n  const rejectProject = (e) => {\n    const {\n      target: { name },\n    } = e;\n    const oldRequestList = Array.from(requestList);\n    let requestMessages = [];\n    for (let i = 0; i < oldRequestList.length; i++) {\n      if (oldRequestList[i].projectId !== name) {\n        requestMessages.push(oldRequestList[i]);\n      }\n    }\n    setUserObj({\n      ...userObj,\n      requestMessages,\n    });\n    setRequestList(requestMessages);\n  };\n  return (\n    <div className=\"requestCard-wrapper\">\n      {requestList ? (\n        <ul className=\"requestCard__list-wrapper\">\n          <li className=\"requestCard-warn\">\n            거부된 메세지는 7일 후에 자동으로 삭제됩니다.\n          </li>\n          {requestList.map((message) => {\n            return (\n              <li key={message.projectId} className=\"request-wrapper\">\n                <div className=\"request-wrapper__marked\"></div>\n                <div className=\"request-time__wrapper\">\n                  <span>{getDate(message.requestDate)}</span>\n                </div>\n                <div className=\"request-project__wrapper\">\n                  <div className=\"request-project__img-wrapper\">\n                    <img src={message.projectImg} alt=\"img\" />\n                  </div>\n                  <div className=\"request-project__info-wrapper\">\n                    <div className=\"request-project__info-title\">\n                      {message.projectName}\n                    </div>\n                    <div className=\"request-project__info-leader-wrapper\">\n                      <i className=\"bx bxs-crown\"></i>\n                      <div className=\"leader-img__wrapper\">\n                        <img src={message.leader.profileImg} alt=\"img\" />\n                      </div>\n                      <div className=\"leader-name\">{message.leader.name}</div>\n                    </div>\n                  </div>\n                </div>\n                {message.state === 'pending' || message.state === 'resolve' ? (\n                  <React.Fragment>\n                    {message.state === 'pending' ? (\n                      <div className=\"request-state__wrapper\">\n                        <span>대기중</span>\n                      </div>\n                    ) : (\n                      <div className=\"request-state__wrapper state-resolve\">\n                        <span>승인</span>\n                        <input\n                          type=\"button\"\n                          className=\"request-state__btn\"\n                          value=\"Join\"\n                          name={message.projectId}\n                          onClick={joinProject}\n                        />\n                      </div>\n                    )}\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    {message.state === 'request' ? (\n                      <div className=\"request-state__wrapper state-request\">\n                        <span>요청</span>\n                        <input\n                          name={message.projectId}\n                          onClick={joinProject}\n                          type=\"button\"\n                          className=\"request-state__btn\"\n                          value=\"Join\"\n                        />\n                        <input\n                          name={message.projectId}\n                          onClick={rejectProject}\n                          type=\"button\"\n                          className=\"request-state__btn\"\n                          value=\"Reject\"\n                        />\n                      </div>\n                    ) : (\n                      <div className=\"request-state__wrapper\">\n                        <span>거부</span>\n                      </div>\n                    )}\n                  </React.Fragment>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div className=\"requestCard__no-message\">\n          <span>No Messages</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileRequestCard;\n","import React, { useState } from 'react';\nimport ProfileNavigation from 'router/Profile/ProfileNavigation';\nimport ProfileCard from 'router/Profile/ProfileCard';\nimport ProfileJoinProjectCard from 'router/Profile/ProfileJoinProjectCard';\nimport ProfileRequestCard from 'router/Profile/ProfileRequestCard';\n\nconst Profile = ({ userObj, setUserObj }) => {\n  const [isUserInfoCard, setIsUserInfoCard] = useState(true);\n  const [isJoinProjectCard, setIsJoinProjectCard] = useState(false);\n  const [isRequestMessageCard, setIsRequestMessageCard] = useState(false);\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-wrapper\">\n        <ProfileNavigation\n          setIsUserInfoCard={setIsUserInfoCard}\n          setIsJoinProjectCard={setIsJoinProjectCard}\n          setIsRequestMessageCard={setIsRequestMessageCard}\n        />\n        {isUserInfoCard && (\n          <ProfileCard userObj={userObj} setUserObj={setUserObj} />\n        )}\n        {isJoinProjectCard && (\n          <ProfileJoinProjectCard userObj={userObj} setUserObj={setUserObj} />\n        )}\n        {isRequestMessageCard && (\n          <ProfileRequestCard userObj={userObj} setUserObj={setUserObj} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState } from \"react\";\n\nconst useSeeProjectWithIcon = (userObj, setUserObj) => {\n  const [seeProjectWithIcon, setSeeProjectWithIcon] = useState(userObj.setting.seeProjectWithIcon);\n  useEffect(()=> {\n    const setting = userObj.setting;\n    if(seeProjectWithIcon !== setting.seeProjectWithIcon) {\n      setUserObj({\n        ...userObj,\n        setting: {\n          ...setting,\n          seeProjectWithIcon\n        }\n      });\n    }\n    const naviIconSwitch = document.getElementById('naviIconSwitch');\n    if(seeProjectWithIcon) {\n      naviIconSwitch.checked = false;\n    } else {\n      naviIconSwitch.checked = true;\n    }\n  },[seeProjectWithIcon, userObj, setUserObj]);\n  return setSeeProjectWithIcon;\n}\n\nconst Setting = ({userObj, setUserObj}) => {\n  const setSeeProjectWithIcon = useSeeProjectWithIcon(userObj, setUserObj);\n  const switchCase = (e) => {\n    const {target: {id}} = e;\n    if(id === \"naviIconSwitch\") {\n      setSeeProjectWithIcon(prev => !prev);\n    }\n  }\n  return(\n    <div className=\"setting-container\">\n      <div className=\"setting-wrapper\">\n        <div className='setting-box naviIconChanger'>\n          <div className='setting-box__title'>See project preview with</div>\n          <div className=\"checkbox-wrapper\">\n            <input type=\"checkbox\" id=\"naviIconSwitch\" onClick={switchCase}/>\n            <div className=\"checkbox-inner\">\n              <label htmlFor=\"naviIconSwitch\"></label>\n              <span></span>\n            </div>\n            <div className=\"checkbox__left\">Icon</div>\n            <div className=\"checkbox__right\">Image</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Setting;\n","import { createChat, getChatList } from 'components/fComponents';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst getChatTime = (num) => {\n  const t = new Date(Number(num));\n  const hour = t.getHours();\n  let min = t.getMinutes();\n  if (min < 10) {\n    min = `0${min}`;\n  }\n  const setAmPm = hour < 12;\n  const timeString = `${setAmPm ? hour : hour - 12}:${min}${\n    setAmPm ? 'am' : 'pm'\n  }`;\n  return timeString;\n};\n\n/*\n1. if top에 도달: scrollTop === 0이면 bringChatList 실행\n2. else if 가장 아래에 있는 경우(아무것도 건들지 않은 경우) 가장 아래로\n3. else 새로 나온 chat에 대한 알림.\n*/\n\nconst Chat = ({ userObj, projectObj, projectPath, chatroomPath }) => {\n  const [userInput, setUserInput] = useState('');\n  const [chatList, setChatList] = useState([]);\n  const onMount = useRef(false);\n  const scrollDown = useRef(true);\n  const resetChatList = useRef(null);\n  const chatSettingObj = useRef({\n    isUpdateChatList: true,\n    limit: 10,\n    times: 1,\n  });\n\n  useEffect(() => {\n    const setScroll = (e) => {\n      const scrollTop = e.target.scrollTop;\n      if (scrollTop === 0) {\n        console.count('at the top');\n        chatSettingObj.current = {\n          ...chatSettingObj.current,\n          times: chatSettingObj.current.times + 1,\n          isUpdateChatList: true,\n        };\n        scrollDown.current = false;\n        bringChatList();\n      } else {\n        const offsetHeight = e.target.offsetHeight;\n        const scrollHeight = e.target.scrollHeight;\n        if (scrollTop < scrollHeight - 1.5 * offsetHeight) {\n          scrollDown.current = false;\n        } else {\n          scrollDown.current = true;\n        }\n      }\n    };\n    const bringChatList = () => {\n      if (chatSettingObj.current.isUpdateChatList) {\n        if (resetChatList.current) {\n          resetChatList.current();\n        }\n        let times;\n        times = chatSettingObj.current.times;\n        resetChatList.current = getChatList({\n          path: {\n            projectPath,\n            chatroomPath,\n          },\n          setFunc: setChatList,\n          limit: 10 * times,\n        });\n        chatSettingObj.current.isUpdateChatList = false;\n      }\n    };\n    if (!onMount.current) {\n      chatSettingObj.current = {\n        isUpdateChatList: true,\n        limit: 10,\n        times: 1,\n      };\n      setUserInput('');\n      if (resetChatList.current) {\n        resetChatList.current();\n      }\n      scrollDown.current = true;\n      bringChatList();\n    }\n    const chat__body = document.querySelector('.chat__body');\n    chat__body.addEventListener('scroll', setScroll);\n    return () => chat__body.removeEventListener('scroll', setScroll);\n  }, [projectPath, chatroomPath]);\n\n  useEffect(() => {\n    const chat__body = document.querySelector('.chat__body');\n    if (scrollDown.current) {\n      chat__body.scrollTop = chat__body.scrollHeight;\n    }\n  }, [chatList]);\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setUserInput(value);\n  };\n  const submitMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    createChat({\n      path: {\n        projectPath,\n        chatroomPath,\n      },\n      userObj,\n      chat: userInput,\n    });\n    setUserInput('');\n  };\n  const addChatImg = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = async (evt) => {\n        const imgURL = await evt.currentTarget.result;\n        createChat({\n          path: {\n            projectPath,\n            chatroomPath,\n          },\n          userObj,\n          chatType: 'img',\n          chat: imgURL,\n        });\n      };\n      reader.readAsDataURL(file);\n      e.target.value = '';\n    }\n  };\n  return (\n    <div className=\"chat-wrapper\">\n      <div className=\"chat__header\">\n        <div className=\"chat__header-title\">\n          <span>#{chatroomPath.name}</span>\n        </div>\n        <div className=\"chat__header-additional\">\n          <div className=\"chat__header-search\">\n            <i className=\"bx bx-search\"></i>\n            <input type=\"text\" placeholder=\"Search\" />\n          </div>\n          <div className=\"chat__header-more\">\n            <i className=\"bx bx-dots-vertical-rounded\"></i>\n          </div>\n        </div>\n      </div>\n      <ul className=\"chat__body\">\n        {chatList.map((chat) => {\n          return (\n            <li\n              key={chat.createTime}\n              className={\n                userObj.userId === chat.createrObj.createrId\n                  ? 'owner chat-msg'\n                  : 'chat-msg'\n              }\n            >\n              <div className=\"chat-msg-profile\">\n                <img\n                  className=\"chat-msg-img\"\n                  src={chat.createrObj.createrProfileImg}\n                  alt=\"profile_img\"\n                />\n                <div className=\"chat-msg-date\">\n                  {getChatTime(chat.createTime)}\n                </div>\n              </div>\n              <div className=\"chat-msg-content\">\n                {chat.chatType === 'text' ? (\n                  <div className=\"chat-msg-text\">{chat.doc}</div>\n                ) : (\n                  <div className=\"chat-msg-text\">\n                    <img src={chat.doc} alt=\"img\" />\n                  </div>\n                )}\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n      <div className=\"chat__enter\">\n        <div className=\"chat__enter-option main-option chat__enter-addFile\">\n          <label htmlFor=\"uploadChatImg\">\n            <i className=\"bx bxs-image-add\"></i>\n          </label>\n          <input\n            type=\"file\"\n            id=\"uploadChatImg\"\n            accept=\"image/*\"\n            onChange={addChatImg}\n          />\n        </div>\n        <form onSubmit={submitMessage} className=\"chat__enter-input\">\n          <input\n            placeholder=\"Type a message...\"\n            value={userInput}\n            onChange={onChange}\n            type=\"text\"\n          />\n        </form>\n        <div\n          onClick={submitMessage}\n          className=\"chat__enter-option sub-option chat__enter-submit\"\n        >\n          <i className=\"bx bxs-message-alt-add\"></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  addProjectMember,\n  addProjectRequestUser,\n  createChatroom,\n  findUserWithEmail,\n} from 'components/fComponents';\n\nconst ProjectNavigation = ({\n  userObj,\n  setUserObj,\n  projectObj,\n  projectPath,\n  setChatroomPath,\n  setEditProjectInfo,\n}) => {\n  const [isAddmembers, setIsAddmembers] = useState(false);\n  const [isAddChannels, setIsAddChannels] = useState(false);\n  const [newMemberName, setNewMemberName] = useState('');\n  const [newChannelName, setNewChannelName] = useState('');\n\n  const defineLenght = (testString, limitScore) => {\n    const limit = Number(limitScore) + 1;\n    var check_num = /[0-9]/; // 숫자\n    var check_eng = /[a-zA-Z]/; // 문자\n    // var check_spc = /[~!@#$%^&*()_+|<>?:{}]/; // 특수문자\n    var check_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; // 한글체크\n    let i = 0;\n    let total = 0;\n    let notPermit = false;\n    for (i = 0; i < String(testString).length; i++) {\n      if (check_eng.test(testString[i])) {\n        total += 1;\n      } else if (check_kor.test(testString[i])) {\n        total += 2;\n      } else if (check_num.test(testString[i])) {\n        total += 1;\n      } else {\n        notPermit = true;\n        break;\n      }\n    }\n    if (notPermit) {\n      return 'notPermitInput';\n    } else {\n      if (total >= limit) {\n        return 'overLimit';\n      } else {\n        return null;\n      }\n    }\n  };\n  const onClick = (e) => {\n    const {\n      target: { id },\n    } = e;\n    if (id === 'chatList__title-members-add') {\n      setIsAddmembers((prev) => !prev);\n    } else if (id === 'chatList__title-channels-add') {\n      setIsAddChannels((prev) => !prev);\n    }\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const {\n      target: { name },\n    } = e;\n    if (name === 'add-members') {\n      const user = await findUserWithEmail(newMemberName);\n      if (user) {\n        await addProjectRequestUser(projectObj.projectInfo.projectId, {\n          userId: user.userId,\n          userName: user.name,\n          photoURL: user.profileImg,\n          email: user.email,\n        });\n        alert('접수되었습니다\\n리더의 승인 후 유저가 추가됩니다');\n      } else {\n        alert('존재하지 않는 유저입니다');\n      }\n      setIsAddmembers(false);\n    } else if (name === 'add-channels') {\n      const error = defineLenght(newChannelName, 18);\n      if (error) {\n        if (error === 'notPermitInput') {\n          alert('숫자, 영어, 한글을 제외한 특수문자, 공백은 허용되지 않습니다');\n        } else if (error === 'overLimit') {\n          alert('한글은 9글자, 영어와 숫자는 18글자만 가능합니다');\n        }\n      } else {\n        const chatroomId = await createChatroom({\n          userObj,\n          path: {\n            projectPath,\n            chatroomPath: { id: undefined, name: newChannelName },\n          },\n        });\n        const chatroomObj = { id: chatroomId, name: newChannelName };\n        let lastEditedProjectList = userObj.lastEditedProjectList;\n        for (let i = 0; i < lastEditedProjectList.length; i++) {\n          if (lastEditedProjectList[i].projectPath.name === projectPath.name) {\n            lastEditedProjectList[i].chatroomPath = chatroomObj;\n            setUserObj({\n              ...userObj,\n              lastEditedProjectList,\n            });\n          }\n        }\n        setIsAddChannels(false);\n        setChatroomPath(chatroomObj);\n        setNewChannelName('');\n      }\n    }\n  };\n  const onChange = (e) => {\n    const { id, value } = e.target;\n    if (id === 'chatList__add-members') {\n      setNewMemberName(value);\n    } else if (id === 'chatList__add-channels') {\n      setNewChannelName(value);\n    }\n  };\n  const changeEditPage = () => {\n    setEditProjectInfo((prev) => !prev);\n  };\n  return (\n    <div className=\"chatList-wrapper\">\n      <div className=\"chatList-userInfo\">\n        <div className=\"chatList-userInfo__img-wrapper\">\n          <img className=\"profile_img lg2\" src={userObj.photoURL} alt=\"img\" />\n        </div>\n        <div className=\"chatList-userInfo__info\">\n          <div className=\"chatList-userInfo__info-name\">{userObj.userName}</div>\n          <div className=\"chatList-userInfo__info-email\">{userObj.email}</div>\n        </div>\n      </div>\n      {projectObj.leaderId === userObj.userId && (\n        <div\n          className=\"chatList-components change-project__wrapper\"\n          onClick={changeEditPage}\n        >\n          <i className=\"bx bxs-crown\"></i>\n          <div className=\"change-project__title\">Edit Project</div>\n        </div>\n      )}\n      <div className=\"chatList-components chatList-members\">\n        <div className=\"chatList__title\">\n          <i className=\"bx bxs-down-arrow\"></i>\n          <div className=\"chatList__title-title\">Members</div>\n          {isAddmembers ? (\n            <i\n              id=\"chatList__title-members-add\"\n              onClick={onClick}\n              className=\"bx bx-arrow-back\"\n            ></i>\n          ) : (\n            <i\n              id=\"chatList__title-members-add\"\n              onClick={onClick}\n              className=\"bx bxs-user-plus\"\n            ></i>\n          )}\n        </div>\n        {isAddmembers ? (\n          <form\n            onSubmit={onSubmit}\n            name=\"add-members\"\n            className=\"chatList__add\"\n          >\n            <span>Enter member's email</span>\n            <input\n              type=\"email\"\n              placeholder=\"Enter member's email\"\n              id=\"chatList__add-members\"\n              onChange={onChange}\n              value={newMemberName}\n            />\n            <input type=\"submit\" value=\"Add member\" />\n          </form>\n        ) : (\n          <ul className=\" chatList__list-wrapper\">\n            {projectObj.userObjList.map((member) => (\n              <li key={member.userId} className=\"chatList__list\">\n                <img src={member.profileImg} alt=\"img\" />\n                <span className=\"chatList__list-title\">{member.name}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <div className=\"chatList-components chatList-channels\">\n        <div className=\"chatList__title\">\n          <i className=\"bx bxs-down-arrow\"></i>\n          <div className=\" chatList__title-title\">Channels</div>\n          {isAddChannels ? (\n            <i\n              id=\"chatList__title-channels-add\"\n              onClick={onClick}\n              className=\"bx bx-arrow-back\"\n            ></i>\n          ) : (\n            <i\n              id=\"chatList__title-channels-add\"\n              onClick={onClick}\n              className=\"bx bxs-plus-square\"\n            ></i>\n          )}\n        </div>\n        {isAddChannels ? (\n          <form\n            onSubmit={onSubmit}\n            name=\"add-channels\"\n            className=\"chatList__add\"\n          >\n            <span>Create New channel</span>\n            <input\n              type=\"text\"\n              placeholder=\"Enter channel name\"\n              id=\"chatList__add-channels\"\n              onChange={onChange}\n              value={newChannelName}\n            />\n            <input type=\"submit\" value=\"create channel\" />\n          </form>\n        ) : (\n          <ul className=\"chatList__list-wrapper\">\n            {projectObj.chatList.map((chatroom) => (\n              <li key={chatroom.id} className=\"chatList__list\">\n                <Link\n                  className=\"chatList__list-link\"\n                  name={chatroom.name}\n                  key={chatroom.id}\n                  to={{\n                    pathname: `/project/${projectObj.projectInfo.projectId}`,\n                    hash: `#${chatroom.id}==${chatroom.name}`,\n                    state: { fromDashboard: true },\n                  }}\n                >\n                  <span className=\"chatList__list-hash\">#</span>\n                  <span className=\"chatList__list-title\">{chatroom.name}</span>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectNavigation;\n","import { createChatroom } from 'components/fComponents';\nimport React, { useState } from 'react';\n\nconst CreateNewChatroom = ({\n  userObj,\n  setUserObj,\n  projectPath,\n  setChatroomPath,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setInputValue(value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const chatroomId = await createChatroom({\n      userObj,\n      path: {\n        projectPath,\n        chatroomPath: { id: undefined, name: inputValue },\n      },\n    });\n    const chatroomObj = { id: chatroomId, name: inputValue };\n    let lastEditedProjectList = userObj.lastEditedProjectList;\n    for (let i = 0; i < lastEditedProjectList.length; i++) {\n      if (lastEditedProjectList[i].projectPath.name === projectPath.name) {\n        lastEditedProjectList[i].chatroomPath = chatroomObj;\n        setUserObj({\n          ...userObj,\n          lastEditedProjectList,\n        });\n      }\n    }\n    setChatroomPath(chatroomObj);\n  };\n  return (\n    <div className=\"createNewChatroom-container\">\n      <form className=\"createNewChatroom-wrapper\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter channel name\"\n          onChange={onChange}\n          value={inputValue}\n        />\n        <input type=\"submit\" value=\"create channel\" />\n      </form>\n    </div>\n  );\n};\n\nexport default CreateNewChatroom;\n","import {\n  deleteProjectChannel,\n  updateProjectChatList,\n} from 'components/fComponents';\nimport React, { useState } from 'react';\n\nconst EditChannelCard = ({ projectObj }) => {\n  const [chatList, setChatList] = useState({\n    list: Array.from(projectObj.chatList),\n  });\n  const [deleteList, setDeleteList] = useState([]);\n  const [isDeleteDone, setIsDeleteDone] = useState(true);\n  const defineLenght = (testString, limitScore) => {\n    const limit = Number(limitScore) + 1;\n    var check_num = /[0-9]/; // 숫자\n    var check_eng = /[a-zA-Z]/; // 문자\n    // var check_spc = /[~!@#$%^&*()_+|<>?:{}]/; // 특수문자\n    var check_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; // 한글체크\n    let i = 0;\n    let total = 0;\n    let notPermit = false;\n    for (i = 0; i < String(testString).length; i++) {\n      if (check_eng.test(testString[i])) {\n        total += 1;\n      } else if (check_kor.test(testString[i])) {\n        total += 2;\n      } else if (check_num.test(testString[i])) {\n        total += 1;\n      } else {\n        notPermit = true;\n        break;\n      }\n    }\n    if (notPermit) {\n      return 'notPermitInput';\n    } else {\n      if (total >= limit) {\n        return 'overLimit';\n      } else {\n        return null;\n      }\n    }\n  };\n  const toggleCSS = (toggleTarget, currentIconClass, input, btn) => {\n    if (currentIconClass === 'bx bxs-edit') {\n      //start editing\n      toggleTarget.classList.value = 'bx bxs-left-arrow-square';\n      input.style.pointerEvents = 'all';\n      input.style.borderBottom = '1px solid rgba(0,0,0,1)';\n      input.style.opacity = 1;\n      btn.style.opacity = 1;\n      btn.style.pointerEvents = 'all';\n    } else {\n      //done editing\n      toggleTarget.classList.value = 'bx bxs-edit';\n      input.style.opacity = 0;\n      input.style.pointerEvents = 'none';\n      btn.style.opacity = 0;\n      btn.style.pointerEvents = 'none';\n    }\n  };\n  const toggleEdit = (e) => {\n    const currentIconClass = e.target.classList.value;\n    const {\n      target: {\n        parentNode: { parentNode },\n      },\n    } = e;\n    const input = parentNode.childNodes[1].childNodes[1];\n    const btn = parentNode.childNodes[1].childNodes[2];\n    toggleCSS(e.target, currentIconClass, input, btn);\n  };\n  const getMatchIndex = (oldName) => {\n    const chanList = Array.from(chatList.list);\n    for (let i = 0; i < chanList.length; i++) {\n      if (chanList[i].name === oldName) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  const setNewChanName = async (oldName, newName) => {\n    const index = getMatchIndex(oldName);\n    if (index + 1) {\n      let newChatList = chatList.list;\n      newChatList[index].name = newName;\n      setChatList({ list: newChatList });\n      await updateProjectChatList(\n        projectObj.projectInfo.projectId,\n        newChatList\n      );\n    } else {\n      //can't find\n      alert('에러: 채널 이름을 변경할 수 없습니다');\n    }\n  };\n  const isOverlapChannelName = (title) => {\n    const channelList = Array.from(projectObj.chatList);\n    for (let i = 0; i < channelList.length; i++) {\n      if (channelList[i].name === title) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const changeTitle = (e) => {\n    e.preventDefault();\n    const {\n      target: { parentNode },\n    } = e;\n    const channel = String(parentNode.id).slice('channel=='.length);\n    const changedTitle = e.target.childNodes[1].value;\n    if (isOverlapChannelName(changedTitle)) {\n      //channel name has overlap\n      alert('중복된 채널명입니다');\n    } else {\n      const error = defineLenght(changedTitle, 18);\n      if (error) {\n        if (error === 'notPermitInput') {\n          alert('숫자, 영어, 한글을 제외한 특수문자, 공백은 허용되지 않습니다');\n        } else if (error === 'overLimit') {\n          alert('한글은 9글자, 영어와 숫자는 18글자만 가능합니다');\n        }\n      } else {\n        const toggleTarget = parentNode.childNodes[2].childNodes[0];\n        const currentIconClass = toggleTarget.classList.value;\n        setNewChanName(channel, changedTitle);\n        toggleCSS(toggleTarget, currentIconClass, e.target[0], e.target[1]);\n      }\n    }\n  };\n  const checkDelete = (e) => {\n    const clickTarget = e.target.htmlFor;\n    if (clickTarget) {\n      const chan = String(clickTarget).split('==')[1];\n      const inDeleteList = deleteList.indexOf(chan);\n      if (inDeleteList + 1) {\n        let newDeleteList = [];\n        for (let i = 0; i < Array.from(deleteList).length; i++) {\n          if (deleteList[i] !== chan) {\n            newDeleteList = [...newDeleteList, deleteList[i]];\n          }\n        }\n        //already inside : cancel check\n        setDeleteList(newDeleteList);\n      } else {\n        //check for delete\n        const newDeleteList = [...Array.from(deleteList), chan];\n        setDeleteList(newDeleteList);\n      }\n    }\n  };\n  const deleteChannel = async () => {\n    if (deleteList.length) {\n      let channelString = '';\n      for (let i = 0; i < Array.from(deleteList).length; i++) {\n        channelString += `${deleteList[i]}, `;\n      }\n      const isDelete = window.confirm(\n        `${channelString} 채널이 삭제됩니다\\n정말 삭제하시겠습니까?`\n      );\n      if (isDelete) {\n        setIsDeleteDone(false);\n        const newChatList = await deleteProjectChannel(\n          projectObj.projectInfo.projectId,\n          deleteList,\n          setIsDeleteDone\n        );\n        setChatList(newChatList);\n      }\n    } else {\n      alert('삭제할 채널을 선택해 주세요.');\n    }\n  };\n  return (\n    <div className=\"editChannelCard-wrapper\">\n      <div className=\"editChannelCard__title-wrapper\">\n        <div className=\"editChannelCard__title-icon-wrapper\">\n          <i className=\"bx bx-chat\"></i>\n        </div>\n        <span>Channel List</span>\n        <i className=\"bx bx-trash\" onClick={deleteChannel}></i>\n      </div>\n      {chatList.list.length ? (\n        <ul className=\"editChannelCard__editChannelList-wrapper\">\n          {chatList.list.map((channel) => {\n            return (\n              <li\n                key={channel.id}\n                id={'channel==' + channel.name}\n                className=\"editChannel-wrapper\"\n              >\n                <div className=\"editChannel__checkbox-wrapper\">\n                  <div className=\"checkBox\" onClick={checkDelete}>\n                    <input\n                      type=\"checkbox\"\n                      className=\"checkBox-input\"\n                      id={'checkBox==' + channel.name}\n                    />\n                    <label htmlFor={'checkBox==' + channel.name}></label>\n                  </div>\n                </div>\n                <form\n                  onSubmit={changeTitle}\n                  className=\"editChannel__info-wrapper\"\n                >\n                  <span id={'chanTitle'}>{channel.name}</span>\n                  <input type=\"text\" placeholder={channel.name} />\n                  <button>Change</button>\n                </form>\n                <div className=\"editChannel__changeIcon-wrapper\">\n                  <i onClick={toggleEdit} className=\"bx bxs-edit\"></i>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div className=\"editChannelCard__noChannel-wrapper\">No Channel</div>\n      )}\n      {!isDeleteDone && (\n        <div className=\"editChannelCard__deleting\">\n          <div className=\"editChannelCard__noChannel-wrapper\">Deleting...</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EditChannelCard;\n","import { releaseProjectMember } from 'components/fComponents';\nimport React, { useState } from 'react';\n\nconst EditMemberCard = ({ projectObj, userObj }) => {\n  const [userObjList, setUserObjList] = useState(projectObj.userObjList);\n  const [cardMember, setCardMember] = useState(null);\n  const releaseMember = async (e) => {\n    const {\n      target: { name },\n    } = e;\n    if (userObj.userId === name) {\n      alert('리더는 프로젝트에서 제외할 수 없습니다');\n    } else {\n      const relaseUserName = await releaseProjectMember(\n        projectObj.projectInfo.projectId,\n        name\n      );\n      let newUserObjList = [];\n      for (let i = 0; i < Array.from(userObjList).length; i++) {\n        if (userObjList[i].userId !== name) {\n          newUserObjList.push(userObjList[i]);\n        }\n      }\n      alert(`${relaseUserName}은 자유를 찾아 떠났습니다`);\n      setUserObjList(newUserObjList);\n    }\n  };\n  return (\n    <div className=\"editMember-wrapper\">\n      <div className=\"editMember-listwrapper\">\n        <div className=\"editMember-title\">Members</div>\n        <ul className=\"editMember__memberList\">\n          {userObjList.map((memberObj, index) => {\n            return (\n              <li\n                key={index}\n                onClick={() => setCardMember(memberObj)}\n                className=\"editMember__member\"\n              >\n                <div className=\"editMember__member-index\">{index + 1}</div>\n                <div className=\"editMember__info-wrapper\">\n                  <span className=\"editMember__info-name\">\n                    {memberObj.name}\n                  </span>\n                  <span className=\"editMember__info-email\">\n                    {memberObj.email}\n                  </span>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n      <div className=\"editMember__memberCard-container\">\n        {cardMember ? (\n          <div className=\"memberCard-wrapper\">\n            <div className=\"memberCard__img-wrapper\">\n              <img src={cardMember.profileImg} alt=\"img\" />\n            </div>\n            <div className=\"memberCard__info\">\n              <span className=\"memberCard__info-name\">{cardMember.name}</span>\n              <span className=\"memberCard__info-email\">{cardMember.email}</span>\n            </div>\n            <input\n              type=\"button\"\n              name={cardMember.userId}\n              onClick={releaseMember}\n              value=\"Release\"\n            />\n          </div>\n        ) : (\n          <div className=\"empty-memberCard\">Select Member</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditMemberCard;\n","import {\n  updateProjectDescription,\n  updateProjectImg,\n  updateProjectName,\n} from 'components/fComponents';\nimport React, { useState } from 'react';\n\nconst EditProjectCard = ({ projectObj }) => {\n  const [projectImg, setProjectImg] = useState(\n    projectObj.projectInfo.projectImg\n  );\n  const [projectName, setProjectName] = useState(\n    projectObj.projectInfo.projectName\n  );\n  const [description, setDescription] = useState(projectObj.description);\n\n  const defineLenght = (testString, limitScore) => {\n    const limit = Number(limitScore) + 1;\n    var check_num = /[0-9]/; // 숫자\n    var check_eng = /[a-zA-Z]/; // 문자\n    // var check_spc = /[~!@#$%^&*()_+|<>?:{}]/; // 특수문자\n    var check_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; // 한글체크\n    let i = 0;\n    let total = 0;\n    let notPermit = false;\n    for (i = 0; i < String(testString).length; i++) {\n      if (check_eng.test(testString[i])) {\n        total += 1;\n      } else if (check_kor.test(testString[i])) {\n        total += 2;\n      } else if (check_num.test(testString[i])) {\n        total += 1;\n      } else {\n        notPermit = true;\n        break;\n      }\n    }\n    if (notPermit) {\n      return 'notPermitInput';\n    } else {\n      if (total >= limit) {\n        return 'overLimit';\n      } else {\n        return null;\n      }\n    }\n  };\n\n  const onChange = (e) => {\n    let { id, value } = e.target;\n    if (id === 'projectName') {\n      setProjectName(value);\n    } else if (id === 'editProject__description') {\n      setDescription(value);\n    }\n  };\n  const changeProjectImg = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = async (evt) => {\n        const imgURL = await evt.currentTarget.result;\n        const imageURL = await updateProjectImg(\n          projectObj.projectInfo.projectId,\n          imgURL\n        );\n        if (imageURL) {\n          setProjectImg(imageURL);\n        }\n      };\n      reader.readAsDataURL(file);\n      e.target.value = '';\n    }\n  };\n  const changeProjectName = () => {\n    const error = defineLenght(projectName, 14);\n    if (error) {\n      if (error === 'notPermitInput') {\n        alert('숫자, 영어, 한글을 제외한 특수문자, 공백은 허용되지 않습니다');\n      } else if (error === 'overLimit') {\n        alert('한글은 7글자, 영어와 숫자는 14글자만 가능합니다');\n      }\n    } else {\n      updateProjectName(projectObj.projectInfo.projectId, projectName);\n    }\n  };\n  const changeDescription = () => {\n    updateProjectDescription(projectObj.projectInfo.projectId, description);\n  };\n  return (\n    <div className=\"editProject-wrapper\">\n      <div className=\"editprojectImg-wrapper\">\n        <img src={projectImg} alt=\"project_img\" />\n        <label htmlFor=\"uploadImg\">Change Project Image</label>\n        <input\n          type=\"file\"\n          id=\"uploadImg\"\n          accept=\"image/*\"\n          onChange={changeProjectImg}\n        />\n      </div>\n      <div className=\"editProject-info\">\n        <input\n          className=\"hidden_input editProject-name btn-x\"\n          value=\"Update\"\n          type=\"button\"\n          onClick={changeProjectName}\n        />\n        <label className=\"_label editProject-name\" htmlFor=\"projectName\">\n          Name\n        </label>\n        <input\n          className=\"_input\"\n          required\n          type=\"text\"\n          onChange={onChange}\n          id=\"projectName\"\n          value={projectName}\n        />\n        <label\n          className=\"_label editProject-description\"\n          htmlFor=\"editProject__description\"\n        >\n          Description\n        </label>\n        <textarea\n          className=\"_input\"\n          onChange={onChange}\n          id=\"editProject__description\"\n          value={description}\n        />\n        <input\n          className=\"hidden_input editProject-description btn-x\"\n          value=\"Update\"\n          id=\"editProject__description-btn\"\n          type=\"button\"\n          onClick={changeDescription}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default EditProjectCard;\n","import React from 'react';\n\nconst EditProjectNavigation = ({\n  setIsEditProjectCard,\n  setIsEditChannelCard,\n  setIsEditMemberCard,\n  setIsEditRequestCard,\n}) => {\n  const setCard = (e) => {\n    const {\n      target: { id },\n    } = e;\n    const editProject = document.querySelector('#navi-editProject');\n    const editChannel = document.querySelector('#navi-editChannel');\n    const editMember = document.querySelector('#navi-editMember');\n    const editRequest = document.querySelector('#navi-RequestCard');\n    editProject.classList.remove('focus');\n    editChannel.classList.remove('focus');\n    editMember.classList.remove('focus');\n    editRequest.classList.remove('focus');\n    if (id === 'navi-editProject') {\n      editProject.classList.add('focus');\n      setIsEditProjectCard(true);\n      setIsEditChannelCard(false);\n      setIsEditMemberCard(false);\n      setIsEditRequestCard(false);\n    } else if (id === 'navi-editChannel') {\n      editChannel.classList.add('focus');\n      setIsEditProjectCard(false);\n      setIsEditChannelCard(true);\n      setIsEditMemberCard(false);\n      setIsEditRequestCard(false);\n    } else if (id === 'navi-editMember') {\n      editMember.classList.add('focus');\n      setIsEditProjectCard(false);\n      setIsEditChannelCard(false);\n      setIsEditMemberCard(true);\n      setIsEditRequestCard(false);\n    } else if (id === 'navi-RequestCard') {\n      editRequest.classList.add('focus');\n      setIsEditProjectCard(false);\n      setIsEditChannelCard(false);\n      setIsEditMemberCard(false);\n      setIsEditRequestCard(true);\n    }\n  };\n  return (\n    <div className=\"editProjectNavigation-wrapper\">\n      <div\n        className=\"editProject-navi focus\"\n        id=\"navi-editProject\"\n        onClick={setCard}\n      >\n        <span>Project</span>\n      </div>\n      <div className=\"editProject-navi\" id=\"navi-editChannel\" onClick={setCard}>\n        <span>Channels</span>\n      </div>\n      <div className=\"editProject-navi\" id=\"navi-editMember\" onClick={setCard}>\n        <span>Members</span>\n      </div>\n      <div className=\"editProject-navi\" id=\"navi-RequestCard\" onClick={setCard}>\n        <span>Request Messages</span>\n      </div>\n    </div>\n  );\n};\n\nexport default EditProjectNavigation;\n","import { addProjectMember, rejectRequestMember } from 'components/fComponents';\nimport React, { useState } from 'react';\n\nconst EditRequestMessageCard = ({ projectObj, userObj }) => {\n  const [requestList, setRequestList] = useState(\n    Array.from(projectObj.requestUserList)\n  );\n  const submitMember = async (e) => {\n    const {\n      target: { value, name },\n    } = e;\n    if (value === 'Permit') {\n      const requestMessages = await addProjectMember(\n        projectObj.projectInfo.projectId,\n        name,\n        userObj\n      );\n      setRequestList(requestMessages);\n    } else if (value === 'Refuse') {\n      const requestMessages = await rejectRequestMember(\n        projectObj.projectInfo.projectId,\n        name\n      );\n      setRequestList(requestMessages);\n    }\n  };\n  return (\n    <div className=\"editRequest-wrapper\">\n      {requestList.length ? (\n        <ul className=\"editRequestList-wrapper\">\n          {requestList.map((message, index) => {\n            return (\n              <li key={message.userId} className=\"requestMember-wrapper\">\n                <div className=\"requestMember__marked\"></div>\n                <div className=\"requestMember__index\">{index + 1}</div>\n                <div className=\"requestMember-container\">\n                  <div className=\"requestMember__img-wrapper\">\n                    <img src={message.profileImg} alt=\"img\" />\n                  </div>\n                  <div className=\"requestMember__info-wrapper\">\n                    <div className=\"requestMember__info-name\">\n                      {message.userName}\n                    </div>\n                    <div className=\"requestMember__info-email\">\n                      {message.email}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"requestMember__check-wrapper\">\n                  <input\n                    type=\"button\"\n                    value=\"Permit\"\n                    name={message.userId}\n                    onClick={submitMember}\n                  />\n                  <input\n                    type=\"button\"\n                    value=\"Refuse\"\n                    name={message.userId}\n                    onClick={submitMember}\n                  />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <div className=\"NoEditRequest-wrapper\">No Messages</div>\n      )}\n    </div>\n  );\n};\n\nexport default EditRequestMessageCard;\n","import React, { useState } from 'react';\nimport EditChannelCard from 'router/project/EditChannelCard';\nimport EditMemberCard from 'router/project/EditMemberCard';\nimport EditProjectCard from 'router/project/EditProjectCard';\nimport EditProjectNavigation from 'router/project/EditProjectNavigation';\nimport EditRequestMessageCard from 'router/project/EditRequestMessageCard';\n\nconst EditProjectInfo = ({ projectObj, userObj }) => {\n  const [isEditProjectCard, setIsEditProjectCard] = useState(true);\n  const [isEditchannelCard, setIsEditChannelCard] = useState(false);\n  const [isEditMemberCard, setIsEditMemberCard] = useState(false);\n  const [isEditRequestCard, setIsEditRequestCard] = useState(false);\n  return (\n    <div className=\"editProjectInfo-container\">\n      <div className=\"editProjectInfo-wrapper\">\n        <EditProjectNavigation\n          setIsEditProjectCard={setIsEditProjectCard}\n          setIsEditChannelCard={setIsEditChannelCard}\n          setIsEditMemberCard={setIsEditMemberCard}\n          setIsEditRequestCard={setIsEditRequestCard}\n        />\n        {isEditProjectCard && <EditProjectCard projectObj={projectObj} />}\n        {isEditchannelCard && <EditChannelCard projectObj={projectObj} />}\n        {isEditMemberCard && (\n          <EditMemberCard projectObj={projectObj} userObj={userObj} />\n        )}\n        {isEditRequestCard && (\n          <EditRequestMessageCard projectObj={projectObj} userObj={userObj} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditProjectInfo;\n","import { getProjectInfo } from 'components/fComponents';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chat from 'router/project/Chat';\nimport ProjectNavigation from 'router/project/ProjectNavigation';\nimport CreateNewChatroom from 'router/project/CreateNewChatroom';\nimport EditProjectInfo from 'router/project/EditProjectInfo';\n\nconst Project = ({\n  userObj,\n  setUserObj,\n  projectPath,\n  chatroomPath,\n  setChatroomPath,\n}) => {\n  const [projectObj, setProjectObj] = useState(null);\n  const stopBringProjectObj = useRef(null);\n  const [editProjectInfo, setEditProjectInfo] = useState(false);\n\n  useEffect(() => {\n    setEditProjectInfo(false);\n    const bringProjectStartInfo = async (projectPath_ID) => {\n      const stopBringProjectObject = await getProjectInfo(\n        projectPath_ID,\n        setProjectObj\n      );\n      stopBringProjectObj.current = stopBringProjectObject;\n    };\n    if (stopBringProjectObj.current) {\n      stopBringProjectObj.current();\n      stopBringProjectObj.current = null;\n    }\n    bringProjectStartInfo(projectPath.id);\n  }, [projectPath]);\n\n  return (\n    <div className=\"project-container\">\n      {projectObj ? (\n        <React.Fragment>\n          <ProjectNavigation\n            userObj={userObj}\n            setUserObj={setUserObj}\n            projectPath={projectPath}\n            projectObj={projectObj}\n            setChatroomPath={setChatroomPath}\n            setEditProjectInfo={setEditProjectInfo}\n          />\n          <React.Fragment>\n            {editProjectInfo ? (\n              <EditProjectInfo projectObj={projectObj} userObj={userObj} />\n            ) : (\n              <React.Fragment>\n                {chatroomPath ? (\n                  <Chat\n                    userObj={userObj}\n                    projectObj={projectObj}\n                    projectPath={projectPath}\n                    chatroomPath={chatroomPath}\n                  />\n                ) : (\n                  <CreateNewChatroom\n                    userObj={userObj}\n                    setUserObj={setUserObj}\n                    projectPath={projectPath}\n                    setChatroomPath={setChatroomPath}\n                  />\n                )}\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </React.Fragment>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nexport default Project;\n","export default __webpack_public_path__ + \"static/media/joinMates-logo.d6fc655f.jpeg\";","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport {\n  getUserObject,\n  onAuthStateChanged,\n  updateUserObj,\n} from 'components/fComponents';\nimport Auth from 'router/Auth';\nimport Navigation from 'components/Navigation';\nimport Profile from 'router/Profile/Profile';\nimport Setting from 'router/Setting';\nimport Project from 'router/project/Project';\nimport CreateNewProject from 'router/project/CreateNewProject';\nimport joinMates_logo from 'components/css/joinMates-logo.jpeg';\n\nfunction useRedirectCreateProjectPage(setProjectPath) {\n  const [createProjectName, setCreateProjectName] = useState(null);\n  useEffect(() => {\n    if (createProjectName) {\n      setTimeout(() => {\n        setProjectPath(createProjectName);\n        setCreateProjectName(null);\n      }, 500);\n    }\n  }, [createProjectName, setProjectPath]);\n  return { createProjectName, setCreateProjectName };\n}\n\nfunction AppRouter() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [projectPath, setProjectPath] = useState('');\n  const [chatroomPath, setChatroomPath] = useState('');\n  const [rejectList, setRejectList] = useState(null);\n  const [hashHistory, setHashHistory] = useState('');\n  const [userObj, setUserObj] = useState(null);\n  const { createProjectName, setCreateProjectName } =\n    useRedirectCreateProjectPage(setProjectPath);\n  const didAuthMountRef = useRef(false);\n  const didUserObjMountRef = useRef(false);\n  const didSetMountRef = useRef(false);\n\n  const searchMatchProject = (userObj, projectId, chatroomName = '') => {\n    let lastEditedProjectList = userObj.lastEditedProjectList;\n    for (let i = 0; i < lastEditedProjectList.length; i++) {\n      if (lastEditedProjectList[i].projectPath.id === projectId) {\n        if (chatroomName) {\n          const chatroomRef = String(chatroomName).split('==');\n          lastEditedProjectList[i].chatroomPath = {\n            id: chatroomRef[0],\n            name: chatroomRef[1],\n          };\n          setUserObj({\n            ...userObj,\n            lastEditedProjectList,\n          });\n        }\n        return lastEditedProjectList[i];\n      }\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    const uploadUserObj = async () => {\n      await updateUserObj(userObj);\n    };\n    if (didUserObjMountRef.current) {\n      uploadUserObj();\n    } else didUserObjMountRef.current = true;\n  }, [userObj]);\n\n  const set = useCallback(() => {\n    const decodeHash = decodeURI(window.location.hash);\n    if (decodeHash !== hashHistory) {\n      const isProjectHash = '#/project/';\n      const isProject = decodeHash.indexOf(isProjectHash);\n      if (userObj) {\n        if (isProject) {\n          //is not project\n          setProjectPath('');\n          setChatroomPath('');\n        } else {\n          //is project\n          const projectHashRef = decodeHash.slice(isProjectHash.length);\n          const hashIndex = projectHashRef.indexOf('#');\n          if (hashIndex + 1) {\n            //url has info of chatroom = channel move\n            const projectHash = projectHashRef.slice(0, hashIndex);\n            const chatroomHash = projectHashRef.slice(hashIndex + 1);\n            const projectHashObj = searchMatchProject(\n              userObj,\n              projectHash,\n              chatroomHash\n            );\n            setChatroomPath(projectHashObj.chatroomPath);\n            setProjectPath(projectHashObj.projectPath);\n          } else {\n            //no info of chatroom == project move\n            const projectHashObj = searchMatchProject(\n              userObj,\n              projectHashRef,\n              ''\n            );\n            setChatroomPath(projectHashObj.chatroomPath);\n            setProjectPath(projectHashObj.projectPath);\n          }\n        }\n      } else {\n        console.error('no user Obj');\n      }\n    }\n    setHashHistory(decodeHash);\n  }, [hashHistory, userObj]);\n\n  useEffect(() => {\n    if (userObj) {\n      if (!didSetMountRef.current) {\n        set();\n        didSetMountRef.current = true;\n        if (rejectList) {\n          for (let i = 0; i < Array.from(rejectList).length; i++) {\n            alert(\n              `${rejectList[i]} 프로젝트의 리더에 의하여 당신은 프로젝트에서 제외되었습니다`\n            );\n          }\n        }\n      }\n      window.addEventListener('hashchange', set);\n    }\n    return () => window.removeEventListener('hashchange', set);\n  }, [userObj, set, rejectList]);\n\n  useEffect(() => {\n    const getAndSetUserObj = async () => {\n      const { reject, user } = await getUserObject();\n      setRejectList(reject);\n      setUserObj(user); //로드의 트리거\n    };\n    if (didAuthMountRef.current) {\n      if (isLoggedIn) {\n        getAndSetUserObj();\n      }\n    } else {\n      onAuthStateChanged({ setInit, setIsLoggedIn });\n      didAuthMountRef.current = true;\n    }\n  }, [isLoggedIn, setUserObj]);\n\n  return (\n    <React.Fragment>\n      {init ? (\n        <Router>\n          {isLoggedIn && userObj && <Navigation userObj={userObj} />}\n          <Switch>\n            <React.Fragment>\n              {isLoggedIn ? (\n                <React.Fragment>\n                  {userObj && (\n                    <React.Fragment>\n                      <Route exact path=\"/\">\n                        <Redirect to=\"/profile\" />\n                      </Route>\n                      <Route exact path=\"/project/:projectPathId\">\n                        {projectPath && (\n                          <Project\n                            userObj={userObj}\n                            setUserObj={setUserObj}\n                            projectPath={projectPath}\n                            chatroomPath={chatroomPath}\n                            setChatroomPath={setChatroomPath}\n                          />\n                        )}\n                      </Route>\n                      {createProjectName ? (\n                        <Route exact path=\"/project\">\n                          <Redirect\n                            to={{\n                              pathname: `/project/${createProjectName.id}`,\n                              state: { fromDashboard: true },\n                            }}\n                          />\n                        </Route>\n                      ) : (\n                        <Route exact path=\"/project\">\n                          <CreateNewProject\n                            userObj={userObj}\n                            setUserObj={setUserObj}\n                            setCreateProjectName={setCreateProjectName}\n                          />\n                        </Route>\n                      )}\n                      <Route exact path=\"/setting\">\n                        <Setting userObj={userObj} setUserObj={setUserObj} />\n                      </Route>\n                      <Route exact path=\"/profile\">\n                        <Profile userObj={userObj} setUserObj={setUserObj} />\n                      </Route>\n                    </React.Fragment>\n                  )}\n                </React.Fragment>\n              ) : (\n                <div id=\"auth-container\">\n                  <Route path=\"/\">\n                    <Auth />\n                  </Route>\n                </div>\n              )}\n            </React.Fragment>\n          </Switch>\n        </Router>\n      ) : (\n        <React.Fragment>\n          <div class=\"initializing-div\">\n            <img\n              class=\"initializing-logo\"\n              src={joinMates_logo}\n              alt=\"JoinMates\"\n            />\n            <div class=\"initializing__loading-div\">\n              <div id=\"load\">\n                <div>G</div>\n                <div>N</div>\n                <div>I</div>\n                <div>D</div>\n                <div>A</div>\n                <div>O</div>\n                <div>L</div>\n              </div>\n            </div>\n          </div>\n          <footer id=\"joinMates-footer\">\n            &copy; {new Date().getFullYear()}JoinMates\n          </footer>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from 'components/Router';\nimport 'index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n//firebase.analytics();\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const fireStore = firebase.firestore();\nexport const storage = firebase.storage();\n\n// <!-- The core Firebase JS SDK is always required and must be listed first -->\n// <script src=\"https://www.gstatic.com/firebasejs/8.7.1/firebase-app.js\"></script>\n\n// <!-- TODO: Add SDKs for Firebase products that you want to use\n//      https://firebase.google.com/docs/web/setup#available-libraries -->\n// <script src=\"https://www.gstatic.com/firebasejs/8.7.1/firebase-analytics.js\"></script>\n","import { authService, firebaseInstance, fireStore, storage } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\n\n//login or signup with email and password\nconst authWithEmailAndPassword = async ({\n  newAccount,\n  email,\n  password,\n  userName = '',\n}) => {\n  try {\n    let data;\n    if (newAccount) {\n      data = await authService.createUserWithEmailAndPassword(email, password);\n      const { userObj } = await ifNewbieConstructUserData(data, userName);\n      await createUserObj(userObj);\n      return { data: userObj, error: null };\n    } else {\n      data = await authService.signInWithEmailAndPassword(email, password);\n      return { data: null, error: null };\n    }\n  } catch (error) {\n    const code = error.code;\n    if (code === 'auth/invalid-email') {\n      return { data: null, error: '존재하지 않는 이메일입니다' };\n    } else if (code === 'auth/user-disabled') {\n      return { data: null, error: '존재하지 않거나 잘못된 이메일입니다' };\n    } else if (code === 'auth/user-not-found') {\n      return { data: null, error: '존재하지 않는 유저입니다' };\n    } else if (code === 'auth/wrong-password') {\n      return { data: null, error: '잘못된 비밀번호 입니다' };\n    } else if (code === 'auth/weak-password') {\n      return { data: null, error: '비밀번호는 최소 6글자입니다' };\n    } else {\n      return { data: null, error: error.message };\n    }\n  }\n};\n\n//login or signup with google and github\nconst socialAccount = async (name) => {\n  try {\n    let provider;\n    let data;\n    if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    } else if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    data = await firebaseInstance.auth().signInWithPopup(provider);\n    const { isNewAccount, userObj } = await ifNewbieConstructUserData(data);\n    if (isNewAccount) await createUserObj(userObj);\n    return { data: userObj, error: null };\n  } catch (error) {\n    const code = error.code;\n    if (code === 'auth/account-exists-with-different-credential') {\n      return { data: null, error: '이미 존재하는 이메일입니다' };\n    } else if (code === 'auth/auth-domain-config-required') {\n      return { data: null, error: '허용되지 않는 도메인 주소입니다' };\n    } else if (code === 'cancelled-popup-request') {\n      return {\n        data: null,\n        error: '한번에 너무 많은 팝업이 발생하였습니다\\n다시 시도해주십시오',\n      };\n    } else if (code === 'auth/operation-not-allowed') {\n      return { data: null, error: '해당 소셜에 맞는 이메일을 사용해주십시오' };\n    } else if (code === 'auth/operation-not-supported-in-this-environment') {\n      return {\n        data: null,\n        error: 'http 또는 https를 제외한 프로트콜은 지원되지 않습니다',\n      };\n    } else if (code === 'auth/popup-blocked') {\n      return { data: null, error: '팝업을 허용해 주십시오' };\n    } else if (code === 'auth/popup-closed-by-user') {\n      return { data: null, error: '' }; //pass\n    } else if (code === 'auth/unauthorized-domain') {\n      console.error(error.message);\n      return { data: null, error: '' };\n    } else {\n      return { data: null, error: error.message };\n    }\n  }\n};\n\n//create user infomation object from auth data\nconst ifNewbieConstructUserData = async (data, name = 'set_your_name') => {\n  const defaultProfileImg =\n    'https://firebasestorage.googleapis.com/v0/b/joinmates-7701.appspot.com/o/defaultProfileImg?alt=media&token=310ed0a4-3b48-41d3-9148-acfe6b028d00';\n  let userName = Boolean(data.user.displayName) ? data.user.displayName : name;\n  let photoURL = Boolean(data.user.photoURL)\n    ? data.user.photoURL\n    : defaultProfileImg;\n  let isNewAccount = data.additionalUserInfo.isNewUser;\n  if (isNewAccount) {\n    const leaderObj = (\n      await fireStore\n        .collection('userList')\n        .doc('OpAPuoLnVkepWXPlaTfxEwNiEh52')\n        .get()\n    ).data();\n    const projectInfo = (\n      await fireStore\n        .collection('project')\n        .doc('ff942f30-9e98-4adf-a8da-18aba8b60c8b')\n        .get()\n    ).data().projectInfo;\n    const requestObj = {\n      leader: {\n        email: leaderObj.email,\n        id: leaderObj.userId,\n        name: leaderObj.userName,\n        profileImg: leaderObj.photoURL,\n      },\n      projectImg: projectInfo.projectImg,\n      projectId: projectInfo.projectId,\n      projectName: projectInfo.projectName,\n      requestDate: Date.now(),\n      state: 'request',\n    };\n    const userObj = {\n      userName,\n      userId: data.user.uid,\n      email: data.user.email,\n      emailVerified: data.user.emailVerified,\n      photoURL,\n      friends: [],\n      projectList: [],\n      lastEditedProjectList: [],\n      requestMessages: [requestObj],\n      setting: {\n        seeProjectWithIcon: false,\n      },\n    };\n    return { isNewAccount, userObj };\n  } else {\n    return null;\n  }\n};\n\n//set user infomation object on fireStore_userList\nconst createUserObj = async (userObj) => {\n  await fireStore.collection('userList').doc(userObj.userId).set(userObj);\n};\n\n//get public url of uploaded project image.\nconst uploadProjectImg = async (projectId, imageURL) => {\n  try {\n    const fileRef = storage.ref().child(`projectImg/${projectId}`);\n    const response = await fileRef.putString(imageURL, 'data_url');\n    const responseURL = await response.ref.getDownloadURL();\n    return responseURL;\n  } catch (error) {\n    return null;\n  }\n};\n\n//create project and add project id in fireStore_userList_projectList\nconst createProject = async ({\n  userObj,\n  projectName = 'project_name',\n  projectImgDataURL = '',\n  memberIdList = [],\n  description = '',\n}) => {\n  const projectId = uuidv4();\n  let projectImg;\n  if (projectImgDataURL) {\n    projectImg = await uploadProjectImg(projectId, projectImgDataURL);\n  } else {\n    projectImg =\n      'https://firebasestorage.googleapis.com/v0/b/joinmates-7701.appspot.com/o/defaultProjectImg.jpg?alt=media&token=f93b15f0-bd72-4b93-b031-9a5d4631cae9';\n  }\n  const projectObj = {\n    projectInfo: {\n      projectName,\n      projectId,\n      projectImg,\n    },\n    chatList: [],\n    userInfo: memberIdList,\n    leaderId: userObj.userId,\n    description,\n    createTime: String(Date.now()),\n    requestUserList: [],\n    lastChatId: 'ch0',\n  };\n  await fireStore.collection('project').doc(projectId).set(projectObj);\n  return projectObj.projectInfo;\n};\n\nconst createChatroom = async ({ userObj, path = null }) => {\n  if (!path) console.error('createChatroom Error : no path propoerty');\n  const currentProjectData = (\n    await fireStore.doc(`project/${path.projectPath.id}`).get()\n  ).data();\n  let chatroomList = currentProjectData.chatList;\n  let isOverlap = false;\n  for (let i = 0; i < Array.from(chatroomList).length; i++) {\n    if (chatroomList[i].name === path.chatroomPath.name) {\n      alert('이미 존재하는 채널 이름입니다');\n      isOverlap = true;\n      return;\n    }\n  }\n  if (!isOverlap) {\n    const preLastChatId = currentProjectData.lastChatId;\n    const chatIndex = Number(String(preLastChatId).slice(2)) + 1;\n    const lastChatId = `ch${chatIndex}`;\n    const newChatroomObj = { id: lastChatId, name: path.chatroomPath.name };\n    chatroomList = [...chatroomList, newChatroomObj];\n    await fireStore.doc(`project/${path.projectPath.id}`).update({\n      ...currentProjectData,\n      chatList: chatroomList,\n      lastChatId,\n    });\n    const newPath = {\n      projectPath: path.projectPath,\n      chatroomPath: newChatroomObj,\n    };\n    await createChat({\n      path: newPath,\n      userObj,\n      chatType: 'text',\n      chat: 'Congratulations! You just create a new chatRoom',\n    });\n    return `ch${chatIndex}`;\n  } else {\n    return;\n  }\n  //공지사항란에 chatroom생성자와 함께 생성됨을 알려주는 기능 필요.\n};\n\nconst createChat = async ({\n  path = null,\n  userObj,\n  chatType = 'text',\n  chat = '',\n  commitTo = null,\n}) => {\n  if (!path) console.error('createChat Error : no path propoerty');\n  if (!userObj.userId)\n    console.error('createChat Error : no createrId propoerty');\n  let createTime = String(Date.now());\n  if (chatType === 'img') {\n    chat = await getStorageURLOfChatImg(path, chat, createTime);\n  }\n  let chatObj = {\n    createrObj: {\n      createrId: userObj.userId,\n      createrName: userObj.userName,\n      createrProfileImg: userObj.photoURL,\n      createrEmail: userObj.email,\n    },\n    chatType,\n    doc: chat,\n    createTime,\n    isEdited: false,\n    isCommit: false,\n  };\n  await fireStore\n    .collection(`project/${path.projectPath.id}/${path.chatroomPath.id}`)\n    .doc(createTime)\n    .set(chatObj);\n};\n\nconst createCommit = async ({\n  path = null,\n  userObj,\n  type = 'text',\n  commit = '',\n  commitToId = null,\n}) => {\n  if (!path) console.error('createChat Error : no path propoerty');\n  if (!commitToId) console.error('click the chat that you want to commit');\n  const createTime = String(Date.now());\n  let commitObj = {\n    createrObj: {\n      createrId: userObj.userId,\n      createrName: userObj.userName,\n      createrProfileImg: userObj.photoURL,\n      createrEmail: userObj.email,\n    },\n    commitType: type,\n    doc: commit,\n    createTime,\n    isEdited: false,\n    isCommit: true,\n    commitToId,\n  };\n  if (type === 'text') {\n    await fireStore\n      .collection(`project/${path.projectPath.id}/${path.chatroomPath.id}`)\n      .doc(createTime)\n      .set(commitObj);\n  } //else if(chatType === img)\n};\n\n// const uploadImg = async (userObj, imageURL) => {\n//   const fileRef = storage.ref().child(`${userObj.userId}/${uuidv4()}}`);\n//   const response = await fileRef.putString(imageURL, 'data_url');\n//   const responseURL = await response.ref.getDownloadURL();\n//   return responseURL;\n// };\n\nconst getStorageURLOfChatImg = async (path, imageURL, createTime) => {\n  const fileRef = storage\n    .ref()\n    .child(\n      `projectImg/${path.projectPath.id}/${path.chatroomPath.id}/${createTime}`\n    );\n  const response = await fileRef.putString(imageURL, 'data_url');\n  const responseURL = await response.ref.getDownloadURL();\n  return responseURL;\n};\n\nconst uploadProfileImg = async (userObj, imageURL) => {\n  const fileRef = storage.ref().child(`profileImg/${userObj.userId}`);\n  const response = await fileRef.putString(imageURL, 'data_url');\n  const responseURL = await response.ref.getDownloadURL();\n  return responseURL;\n};\n\nconst updateChat = async ({\n  path = null,\n  type = 'text',\n  currentUserId,\n  updateContents = '',\n}) => {\n  if (!path) console.error('updateChat Error : no path propoerty');\n  let targetChat;\n  targetChat = (\n    await fireStore\n      .collection(`project/${path.projectPath.id}/${path.chatroomPath.id}`)\n      .doc(path.chatPath)\n      .get()\n  ).data();\n  if (currentUserId === targetChat.createrObj.createrId) {\n    if (type === 'text') {\n      const newTargetChat = {\n        ...targetChat,\n        doc: updateContents,\n        isEdited: true,\n      };\n      await fireStore\n        .doc(\n          `project/${path.projectPath.id}/${path.chatroomPath.id}/${path.chatPath}`\n        )\n        .update(newTargetChat);\n    }\n  } else {\n    return 'Permission denied : it is not your chat';\n  }\n};\n\nconst deleteChat = async ({ path = null, type }) => {\n  if (!path) console.error('updateChat Error : no path propoerty');\n  if (type === 'text') {\n    await fireStore\n      .doc(\n        `project/${path.projectPath.id}/${path.chatroomPath.id}/${path.chatPath}`\n      )\n      .delete();\n  }\n};\n\nconst getUserUnprocessedObj = async () => {\n  return await new Promise((resolve) => {\n    const waitForValue = setInterval(async () => {\n      console.count('check');\n      const userId = authService.currentUser.uid;\n      const userObj = (\n        await fireStore.collection('userList').doc(userId).get()\n      ).data();\n      if (userObj) {\n        clearInterval(waitForValue);\n        resolve(userObj);\n      }\n    }, 300);\n  });\n};\n\nconst getUserObject = async () => {\n  const userObj = await getUserUnprocessedObj();\n  console.log(userObj);\n  if (\n    userObj.projectList !== undefined &&\n    userObj.projectList !== [] &&\n    userObj.projectList !== null\n  ) {\n    const projectIdList = Array.from(userObj.projectList).map((project) => {\n      return project.projectId;\n    });\n    const projectListRef = await Promise.all(\n      projectIdList.map(async (projectId) => {\n        const projectObj = (\n          await fireStore.doc(`project/${projectId}`).get()\n        ).data();\n        const userList = Array.from(projectObj.userInfo);\n        if (userList.indexOf(userObj.userId) + 1) {\n          let chatroomPath = '';\n          if (Array.from(projectObj.chatList).length) {\n            chatroomPath = projectObj.chatList[0];\n          }\n          return {\n            projectInfo: projectObj.projectInfo,\n            lastEditedProject: {\n              chatroomPath,\n              projectPath: {\n                id: projectObj.projectInfo.projectId,\n                name: projectObj.projectInfo.projectName,\n              },\n            },\n            reject: false,\n          };\n        } else {\n          //project doesn't have userId: user has except from project by leader.\n          return {\n            projectInfo: projectObj.projectInfo.projectName,\n            lastEditedProject: null,\n            reject: true,\n          };\n        }\n      })\n    );\n    let projectList = [];\n    let rejectList = [];\n    let lastEditedProjectList = [];\n    for (let i = 0; i < projectListRef.length; i++) {\n      if (projectListRef[i].reject) {\n        rejectList = [...rejectList, projectListRef[i].projectInfo];\n      } else {\n        projectList = [...projectList, projectListRef[i].projectInfo];\n        lastEditedProjectList = [\n          ...lastEditedProjectList,\n          projectListRef[i].lastEditedProject,\n        ];\n      }\n    }\n    return {\n      reject: rejectList,\n      user: { ...userObj, lastEditedProjectList, projectList },\n    };\n  } else {\n    return {\n      reject: null,\n      user: { ...userObj, lastEditedProjectList: [], projectList: [] },\n    };\n  }\n};\n\nconst getChatList = ({ path, setFunc, limit = 10 }) => {\n  const bringChatList = fireStore\n    .collection(`project/${path.projectPath.id}/${path.chatroomPath.id}`)\n    .orderBy('createTime', 'asc')\n    .limitToLast(limit)\n    .onSnapshot(async function (result) {\n      const chatList = await Promise.all(\n        result.docs.map(async (chat) => {\n          const data = chat.data();\n          if (data.isCommit) {\n            const commitToObj = (\n              await fireStore\n                .collection(\n                  `project/${path.projectPath.id}/${path.chatroomPath.id}`\n                )\n                .doc(data.commitToId)\n                .get()\n            ).data();\n            return {\n              ...data,\n              commitToObj,\n            };\n          } else {\n            return data;\n          }\n        })\n      );\n      setFunc(Array.from(chatList));\n    });\n  //나중에 본게임에 가서 함수 수정할 때 onLoad를 표현하자.\n  return bringChatList;\n};\n\nconst onAuthStateChanged = ({ setInit, setIsLoggedIn }) => {\n  authService.onAuthStateChanged((user) => {\n    if (user) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n    setInit(true);\n  });\n};\n\nconst signOut = async () => {\n  await authService.signOut();\n};\n\nconst getUserComfirm = async (currentPassword) => {\n  let password;\n  if (currentPassword) {\n    password = currentPassword;\n  } else {\n    password = window.prompt('비밀번호를 입력해주세요');\n  }\n  if (password) {\n    try {\n      const user = authService.currentUser;\n      const credential = firebaseInstance.auth.EmailAuthProvider.credential(\n        user.email,\n        password\n      );\n      return { user, credential, error: null };\n    } catch (error) {\n      return { user: null, credential: null, error: '잘못된 비밀번호입니다' };\n    }\n  } else {\n    return {\n      user: null,\n      credential: null,\n      error: null, //유저가 창을 종료한 경우: pass\n    };\n  }\n};\n\nconst deleteAccount = async () => {\n  //delete user account in firebase\n  const { user, credential, error } = await getUserComfirm();\n  if (error) {\n    alert(error);\n    return;\n  }\n  await user\n    .reauthenticateWithCredential(credential)\n    .then(async () => {\n      await fireStore.collection('userList').doc(user.uid).delete();\n      await authService.currentUser.delete().then(\n        async () => {\n          //delete userObj\n          await fireStore.collection('userList').doc(user.uid).delete();\n        },\n        () => {\n          if (error) {\n            alert(error);\n          }\n        }\n      );\n    })\n    .catch((error) => {\n      alert(error.message);\n    });\n};\n\nconst updatePassword = async (currentPassword, newPassword) => {\n  const { user, credential, error } = await getUserComfirm(currentPassword);\n  if (error) {\n    alert(error);\n  }\n  await user\n    .reauthenticateWithCredential(credential)\n    .then(async () => {\n      const result = user.updatePassword(newPassword);\n      result.then(\n        function () {\n          alert('성공적으로 비밀번호를 변경하였습니다');\n        },\n        function (error) {\n          if (error) {\n            alert(error);\n          }\n        }\n      );\n    })\n    .catch((error) => {\n      alert(error.message);\n    });\n};\n\nconst updateEmail = async (newEmail, currentPassword) => {\n  const { user, credential, error } = await getUserComfirm(currentPassword);\n  if (error) {\n    alert(error);\n  }\n  await user\n    .reauthenticateWithCredential(credential)\n    .then(async () => {\n      const result = user.updateEmail(newEmail);\n      result.then(\n        async () => {\n          alert('성공적으로 이메일을 변경하였습니다');\n        },\n        function (error) {\n          if (error) {\n            alert(error);\n          }\n        }\n      );\n    })\n    .catch((error) => {\n      alert(error.message);\n    });\n};\n\nconst updateUserName = async (userName) => {\n  await authService.currentUser.updateProfile({ displayName: userName }).then(\n    async () => {\n      alert('성공적으로 이름을 변경하였습니다');\n    },\n    function (error) {\n      alert(error.message);\n    }\n  );\n};\n\nconst updateUserProfileImg = async (userObj, profileImg) => {\n  const responseURL = await uploadProfileImg(userObj, profileImg);\n  await authService.currentUser.updateProfile({ photoURL: responseURL }).then(\n    async () => {\n      alert('성공적으로 프로필 사진을 변경하였습니다');\n    },\n    function (error) {\n      alert(error.message);\n    }\n  );\n  return responseURL;\n};\n\nconst updateProjectImg = async (projectId, projectImg) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  let projectInfo = projectObj.projectInfo;\n  const responseURL = await uploadProjectImg(projectId, projectImg);\n  if (responseURL) {\n    projectInfo.projectImg = responseURL;\n    await fireStore.doc(`project/${projectId}`).update({\n      ...projectObj,\n      projectInfo,\n    });\n    alert('성공적으로 프로젝트 사진을 변경했습니다');\n    return responseURL;\n  } else {\n    alert('에러: 프로젝트 이미지를 변경 할 수 없습니다');\n  }\n};\n\nconst updateProjectName = async (projectId, projectName) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  let projectInfo = projectObj.projectInfo;\n  projectInfo.projectName = projectName;\n  await fireStore.doc(`project/${projectId}`).update({\n    ...projectObj,\n    projectInfo,\n  });\n  alert('성공적으로 프로적트 이름을 변경하였습니다');\n};\n\nconst updateProjectDescription = async (projectId, description) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  await fireStore.doc(`project/${projectId}`).update({\n    ...projectObj,\n    description,\n  });\n  alert('성공적으로 프로젝트 설명을 변경하였습니다');\n};\n\nconst updateProjectChatList = async (projectId, chatList) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  await fireStore.doc(`project/${projectId}`).update({\n    ...projectObj,\n    chatList,\n  });\n};\n\nconst deleteProjectChannel = async (projectId, deleteList, setIsDeleteDone) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  const oldChatList = Array.from(projectObj.chatList);\n  let chatList = [];\n  let deleteChatIdList = [];\n  for (let i = 0; i < oldChatList.length; i++) {\n    let isDelete = false;\n    for (let j = 0; j < Array.from(deleteList).length; j++) {\n      if (oldChatList[i].name === deleteList[j]) {\n        isDelete = true;\n      }\n    }\n    if (isDelete) {\n      deleteChatIdList = [...deleteChatIdList, oldChatList[i].id];\n    } else {\n      chatList = [...chatList, oldChatList[i]];\n    }\n  }\n  await fireStore.doc(`project/${projectId}`).update({\n    ...projectObj,\n    chatList,\n  });\n  var docRef = fireStore.collection('haveToDelete').doc('chatList');\n  docRef\n    .get()\n    .then(async (doc) => {\n      if (doc.exists) {\n        let chatList = doc.data().chatList;\n        chatList = [\n          ...Array.from(chatList),\n          {\n            projectId: projectId,\n            deleteList: deleteChatIdList,\n          },\n        ];\n        await fireStore.collection('haveToDelete').doc('chatList').update({\n          chatList,\n        });\n      } else {\n        await fireStore\n          .collection('haveToDelete')\n          .doc('chatList')\n          .set({\n            chatList: [\n              {\n                projectId: projectId,\n                deleteList: deleteChatIdList,\n              },\n            ],\n          });\n      }\n    })\n    .catch((error) => {\n      console.error('Error getting document:', error);\n    });\n  setIsDeleteDone(true);\n  return Array.from(chatList);\n};\n\nconst updateUserObj = async (userObj) => {\n  try {\n    if (userObj.userId) {\n      await fireStore\n        .collection('userList')\n        .doc(userObj.userId)\n        .update(userObj);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst getProjectInfo = async (projectId, setFunc) => {\n  let projectInfo = null;\n  const bringProjectObj = fireStore\n    .collection('project')\n    .doc(projectId)\n    .onSnapshot(async function (result) {\n      const projectData = result.data();\n      const userIdList = projectData.userInfo;\n      const userObjList = await Promise.all(\n        userIdList.map(async (userId) => {\n          const userInfo = (\n            await fireStore.collection('userList').doc(userId).get()\n          ).data();\n          return {\n            name: userInfo.userName,\n            userId: userInfo.userId,\n            profileImg: userInfo.photoURL,\n            email: userInfo.email,\n          };\n        })\n      );\n      projectInfo = {\n        ...projectData,\n        userObjList,\n      };\n      setFunc(projectInfo);\n    });\n  return bringProjectObj;\n};\n\nconst findProjectWithName = async (projectName) => {\n  const bringProjectList = await fireStore.collection('project').get();\n  const projectList = await Promise.all(\n    bringProjectList.docs.map(async (project) => {\n      const data = project.data();\n      if (data.projectInfo.projectName === projectName) {\n        const leaderRef = (\n          await fireStore.doc(`userList/${data.leaderId}`).get()\n        ).data();\n        const leaderObj = {\n          name: leaderRef.userName,\n          id: leaderRef.userId,\n          email: leaderRef.email,\n          profileImg: leaderRef.photoURL,\n        };\n        return {\n          id: data.projectInfo.projectId,\n          name: data.projectInfo.projectName,\n          projectImg: data.projectInfo.projectImg,\n          leader: leaderObj,\n          createTime: data.createTime,\n          description: data.description,\n        };\n      } else {\n        return null;\n      }\n    })\n  );\n  let newProjectList = [];\n  for (let i = 0; i < projectList.length; i++) {\n    if (projectList[i]) {\n      newProjectList.push(projectList[i]);\n    }\n  }\n  if (newProjectList.length) {\n    return newProjectList;\n  } else {\n    return null;\n  }\n};\n\nconst findUserWithEmail = async (email) => {\n  const bringUserList = await fireStore.collection(`userList`).get();\n  const userList = await Promise.all(\n    bringUserList.docs.map(async (user) => {\n      const data = user.data();\n      if (data.email === email) {\n        return {\n          email: data.email,\n          name: data.userName,\n          userId: data.userId,\n          profileImg: data.photoURL,\n        };\n      } else {\n        return null;\n      }\n    })\n  );\n  for (let i = 0; i < userList.length; i++) {\n    if (userList[i]) {\n      return userList[i];\n    }\n  }\n  return null;\n};\n\nconst addProjectRequestUser = async (projectId, userObj) => {\n  let data = (await fireStore.doc(`project/${projectId}`).get()).data();\n  const oldRequestUserList = Array.from(data.requestUserList);\n  const requestUserList = [\n    ...oldRequestUserList,\n    {\n      userId: userObj.userId,\n      userName: userObj.userName,\n      profileImg: userObj.photoURL,\n      email: userObj.email,\n    },\n  ];\n  data.requestUserList = requestUserList;\n  await fireStore.doc(`project/${projectId}`).update(data);\n};\n\nconst addUserInProject = async (projectId, userId) => {\n  const data = (await fireStore.doc(`project/${projectId}`).get()).data();\n  const userInfo = [...data.userInfo, userId];\n  await fireStore.doc(`project/${projectId}`).update({\n    ...data,\n    userInfo,\n  });\n  let chatroom = '';\n  if (Array.from(data.chatList).length) {\n    chatroom = data.chatList[0];\n  }\n  // let userObj = (\n  //   await fireStore.collection('userList').doc(userId).get()\n  // ).data();\n  // const requestMessages = Array.from(userObj.requestMessages);\n  // for (let i = 0; i < requestMessages.length; i++) {\n  //   if (requestMessages[i].projectId === projectId) {\n  //     requestMessages[i].state = 'fulfilled';\n  //     break;\n  //   }\n  // }\n  // userObj.requestMessages = requestMessages;\n  // await fireStore.collection('userList').doc(userId).update(userObj);\n  return {\n    projectInfo: data.projectInfo,\n    chatroom,\n  };\n};\n\nconst addProjectMember = async (projectId, userId, leaderObj) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  const oldRequestUserList = Array.from(projectObj.requestUserList);\n  let requestUserList = [];\n  for (let i = 0; i < oldRequestUserList.length; i++) {\n    if (oldRequestUserList[i].userId !== userId) {\n      requestUserList = [...requestUserList, oldRequestUserList[i]];\n    }\n  }\n  const userObj = (\n    await fireStore.collection('userList').doc(userId).get()\n  ).data();\n  let requestMessages = Array.from(userObj.requestMessages);\n  let noMessage = true;\n  if (requestMessages.length) {\n    for (let i = 0; requestMessages.length; i++) {\n      const message = requestMessages[i];\n      const projectId = message.projectId;\n      if (message.projectId === projectId) {\n        message.state = 'resolve';\n        noMessage = false;\n        break;\n      }\n    }\n  }\n  if (noMessage) {\n    await sendAttendMessageWhenAddMember(\n      projectObj.projectInfo,\n      leaderObj,\n      userId\n    );\n  } else {\n    await fireStore\n      .collection('userList')\n      .doc(userId)\n      .update({\n        ...userObj,\n        requestMessages,\n      });\n  }\n  await fireStore.doc(`project/${projectId}`).update({\n    ...projectObj,\n    requestUserList,\n  });\n  return requestUserList;\n};\n\nconst sendAttendMessageWhenAddMember = async (\n  projectInfo,\n  leaderObj,\n  userId\n) => {\n  const requestObj = {\n    leader: {\n      email: leaderObj.email,\n      id: leaderObj.userId,\n      name: leaderObj.userName,\n      profileImg: leaderObj.photoURL,\n    },\n    projectImg: projectInfo.projectImg,\n    projectId: projectInfo.projectId,\n    projectName: projectInfo.projectName,\n    requestDate: Date.now(),\n    state: 'request',\n  };\n  let userObj = (\n    await fireStore.collection('userList').doc(userId).get()\n  ).data();\n  const requestMessages = [...userObj.requestMessages, requestObj];\n  userObj.requestMessages = requestMessages;\n  await fireStore.collection('userList').doc(userId).update(userObj);\n};\n\nconst rejectRequestMember = async (projectId, userId) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  const oldRequestUserList = Array.from(projectObj.requestUserList);\n  let requestUserList = [];\n  for (let i = 0; i < oldRequestUserList.length; i++) {\n    if (oldRequestUserList[i].userId !== userId) {\n      requestUserList = [...requestUserList, oldRequestUserList[i]];\n    }\n  }\n  const userObj = (\n    await fireStore.collection('userList').doc(userId).get()\n  ).data();\n  let requestMessages = Array.from(userObj.requestMessages);\n  for (let i = 0; requestMessages.length; i++) {\n    if (requestMessages[i].projectId === projectId) {\n      requestMessages[i].state = 'reject';\n      break;\n    }\n  }\n  await fireStore\n    .collection('userList')\n    .doc(userId)\n    .update({\n      ...userObj,\n      requestMessages,\n    });\n  await fireStore.doc(`project/${projectId}`).update({\n    ...projectObj,\n    requestUserList,\n  });\n  return requestUserList;\n};\n\nconst sendAttendMessageWhenCreateProject = async (\n  leaderObj,\n  memberObjList,\n  projectInfo\n) => {\n  const requestObj = {\n    leader: {\n      email: leaderObj.email,\n      id: leaderObj.userId,\n      name: leaderObj.userName,\n      profileImg: leaderObj.photoURL,\n    },\n    projectImg: projectInfo.projectImg,\n    projectId: projectInfo.projectId,\n    projectName: projectInfo.projectName,\n    requestDate: Date.now(),\n    state: 'request',\n  };\n  await Promise.all(\n    Array.from(memberObjList).map(async (memberObj) => {\n      const userId = memberObj.userId;\n      let userObj = (\n        await fireStore.collection('userList').doc(userId).get()\n      ).data();\n      const requestMessages = [...userObj.requestMessages, requestObj];\n      userObj.requestMessages = requestMessages;\n      await fireStore.collection('userList').doc(userId).update(userObj);\n      return 'done';\n    })\n  );\n};\n\nconst releaseProjectMember = async (projectId, userId) => {\n  const projectObj = (await fireStore.doc(`project/${projectId}`).get()).data();\n  const oldUserInfo = Array.from(projectObj.userInfo);\n  let userInfo = [];\n  for (let i = 0; i < oldUserInfo.length; i++) {\n    if (oldUserInfo[i] !== userId) {\n      userInfo.push(oldUserInfo[i]);\n    }\n  }\n  await fireStore.doc(`project/${projectId}`).update({\n    ...projectObj,\n    userInfo,\n  });\n\n  let userObj = (\n    await fireStore.collection('userList').doc(userId).get()\n  ).data();\n  const oldLastEditedProjectList = Array.from(userObj.lastEditedProjectList);\n  let lastEditedProjectList = [];\n  for (let i = 0; i < oldLastEditedProjectList.length; i++) {\n    if (oldLastEditedProjectList[i].projectPath.id !== projectId) {\n      lastEditedProjectList.push(oldLastEditedProjectList[i]);\n    }\n  }\n  const oldProjectList = Array.from(userObj.projectList);\n  let projectList = [];\n  for (let i = 0; i < oldProjectList.length; i++) {\n    if (oldProjectList[i].projectId !== projectId) {\n      projectList.push(oldProjectList[i]);\n    }\n  }\n  userObj.lastEditedProject = lastEditedProjectList;\n  userObj.projectList = projectList;\n  await fireStore.collection('userList').doc(userId).update(userObj);\n  return userObj.userName;\n};\n\n//chatroom과 project를 추가할 때 특수문자는 안된다고 alert 넣기.\nexport {\n  authWithEmailAndPassword,\n  socialAccount,\n  createProject,\n  createChatroom,\n  createChat,\n  createCommit,\n  updateChat,\n  deleteChat,\n  getUserObject,\n  getChatList,\n  onAuthStateChanged,\n  signOut,\n  deleteAccount,\n  updatePassword,\n  updateEmail,\n  updateUserName,\n  updateUserProfileImg,\n  updateUserObj,\n  getProjectInfo,\n  findProjectWithName,\n  findUserWithEmail,\n  addProjectRequestUser,\n  addUserInProject,\n  updateProjectImg,\n  updateProjectName,\n  updateProjectDescription,\n  updateProjectChatList,\n  deleteProjectChannel,\n  addProjectMember,\n  rejectRequestMember,\n  sendAttendMessageWhenCreateProject,\n  releaseProjectMember,\n};\n"],"sourceRoot":""}